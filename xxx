== strong_parameters.rb ==
C:  3:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:  4:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:  5:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:  6:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:  7:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:  8:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:  9:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C: 10:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C: 11:  9: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C: 18: 81: Metrics/LineLength: Line is too long. [88/80]
C: 20: 81: Metrics/LineLength: Line is too long. [88/80]
C: 36: 81: Metrics/LineLength: Line is too long. [88/80]
C: 42: 43: Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.
C: 42: 81: Metrics/LineLength: Line is too long. [110/80]
C: 42:103: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
C: 51: 81: Metrics/LineLength: Line is too long. [99/80]
C: 54: 13: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C: 75: 81: Metrics/LineLength: Line is too long. [111/80]
C: 81: 81: Metrics/LineLength: Line is too long. [82/80]
C: 85: 81: Metrics/LineLength: Line is too long. [88/80]
C: 86: 81: Metrics/LineLength: Line is too long. [96/80]
C: 87: 81: Metrics/LineLength: Line is too long. [99/80]
C: 88: 81: Metrics/LineLength: Line is too long. [91/80]
C:121:  3: Metrics/ClassLength: Class has too many lines. [374/181]
C:122: 81: Metrics/LineLength: Line is too long. [83/80]
C:132: 81: Metrics/LineLength: Line is too long. [84/80]
C:214: 81: Metrics/LineLength: Line is too long. [88/80]
C:215:  7: Layout/AlignArguments: Align the arguments of a method call if they span more than one line.
C:224: 59: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
C:224: 62: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
C:224: 80: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
C:224: 81: Metrics/LineLength: Line is too long. [81/80]
C:265: 81: Metrics/LineLength: Line is too long. [101/80]
C:270:  7: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
C:285: 81: Metrics/LineLength: Line is too long. [101/80]
C:301: 81: Metrics/LineLength: Line is too long. [101/80]
C:324:  5: Style/Alias: Use alias instead of alias_method in a class body.
C:339:  5: Style/Alias: Use alias instead of alias_method in a class body.
W:343: 20: Lint/UnusedMethodArgument: Unused method argument - block. If it's necessary, use _ or _block as an argument name to indicate that it won't be used. You can also write as each_pair(*) if you want the method to accept any arguments but don't care about them.
C:348:  5: Style/Alias: Use alias instead of alias_method in a class body.
W:352: 21: Lint/UnusedMethodArgument: Unused method argument - block. If it's necessary, use _ or _block as an argument name to indicate that it won't be used. You can also write as each_value(*) if you want the method to accept any arguments but don't care about them.
W:392: 21: Lint/UnusedBlockArgument: Unused block argument - key. If it's necessary, use _ or _key as an argument name to indicate that it won't be used.
C:407: 81: Metrics/LineLength: Line is too long. [88/80]
C:408: 81: Metrics/LineLength: Line is too long. [82/80]
C:413: 81: Metrics/LineLength: Line is too long. [92/80]
C:416: 81: Metrics/LineLength: Line is too long. [92/80]
C:419: 81: Metrics/LineLength: Line is too long. [92/80]
C:422: 81: Metrics/LineLength: Line is too long. [92/80]
C:428: 81: Metrics/LineLength: Line is too long. [82/80]
C:435: 81: Metrics/LineLength: Line is too long. [90/80]
C:453:  7: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
C:455:  7: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
C:458:  9: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
C:463: 11: Style/Alias: Use alias required require instead of alias :required :require.
C:470: 81: Metrics/LineLength: Line is too long. [102/80]
C:481: 81: Metrics/LineLength: Line is too long. [81/80]
C:539: 81: Metrics/LineLength: Line is too long. [141/80]
C:542: 81: Metrics/LineLength: Line is too long. [167/80]
C:555: 81: Metrics/LineLength: Line is too long. [84/80]
C:564: 81: Metrics/LineLength: Line is too long. [98/80]
C:584: 81: Metrics/LineLength: Line is too long. [118/80]
C:585: 81: Metrics/LineLength: Line is too long. [129/80]
C:586: 81: Metrics/LineLength: Line is too long. [99/80]
C:591: 32: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
C:595: 29: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
C:620: 81: Metrics/LineLength: Line is too long. [98/80]
C:621: 81: Metrics/LineLength: Line is too long. [84/80]
C:637: 81: Metrics/LineLength: Line is too long. [91/80]
C:638: 81: Metrics/LineLength: Line is too long. [107/80]
C:646: 81: Metrics/LineLength: Line is too long. [101/80]
C:647: 81: Metrics/LineLength: Line is too long. [93/80]
C:657: 81: Metrics/LineLength: Line is too long. [85/80]
C:659:  7: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
C:661: 81: Metrics/LineLength: Line is too long. [81/80]
C:668:  7: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
C:711:  5: Style/Alias: Use alias instead of alias_method in a class body.
C:724:  5: Style/Alias: Use alias instead of alias_method in a class body.
C:754:  5: Style/Alias: Use alias instead of alias_method in a class body.
W:759: 46: Lint/UnusedBlockArgument: Unused block argument - key. If it's necessary, use _ or _key as an argument name to indicate that it won't be used.
W:759: 57: Lint/UnusedBlockArgument: Unused block argument - right. If it's necessary, use _ or _right as an argument name to indicate that it won't be used.
C:762:  5: Style/Alias: Use alias instead of alias_method in a class body.
C:776: 81: Metrics/LineLength: Line is too long. [84/80]
C:779: 22: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:779: 81: Metrics/LineLength: Line is too long. [81/80]
C:780: 22: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:786: 12: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:790: 12: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:792: 81: Metrics/LineLength: Line is too long. [82/80]
C:793: 33: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:794: 33: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:795: 12: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:797: 81: Metrics/LineLength: Line is too long. [87/80]
C:798:  9: Style/ParallelAssignment: Do not use parallel assignment.
C:798: 45: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:798: 70: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:798: 81: Metrics/LineLength: Line is too long. [81/80]
C:809:  5: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after protected.
C:810:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:810:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:812:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:812:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:814:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:814:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:815: 81: Metrics/LineLength: Line is too long. [94/80]
C:818:  5: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
C:819:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:819:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:825:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:825:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:840:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:840:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:846:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:846:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:849: 11: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
W:850: 36: Lint/UnderscorePrefixedVariableName: Do not use prefix _ for a variable that is used.
C:860:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:860:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:875:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:875:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:877:  9: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
C:880: 20: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
C:881: 81: Metrics/LineLength: Line is too long. [81/80]
C:883: 13: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
C:888:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:888:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:903:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:903:  7: Layout/ClassStructure: constants is supposed to appear before private_methods.
C:903:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:903: 32: Style/MutableConstant: Freeze mutable objects assigned to constants.
C:912: 81: Metrics/LineLength: Line is too long. [82/80]
C:916: 33: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
C:919:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:919:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:933:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:933:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:936: 12: Style/PreferredHashMethods: Use Hash#key? instead of Hash#has_key?.
C:942: 23: Style/SpecialGlobalVars: Prefer $LAST_MATCH_INFO from the stdlib 'English' module (don't forget to require it) over $~.
C:948:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:948:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:949:  9: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
C:949: 81: Metrics/LineLength: Line is too long. [84/80]
C:954:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:954:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:958:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:958:  7: Layout/ClassStructure: constants is supposed to appear before private_methods.
C:958:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:958: 21: Style/MutableConstant: Freeze mutable objects assigned to constants.
C:959:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:959:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:959: 21: Style/MutableConstant: Freeze mutable objects assigned to constants.
C:960:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:960:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:960:  7: Metrics/AbcSize: Assignment Branch Condition size for hash_filter is too high. [18.33/17]
C:960:  7: Metrics/CyclomaticComplexity: Cyclomatic complexity for hash_filter is too high. [7/6]
C:960:  7: Metrics/MethodLength: Method has too many lines. [18/14]
C:960:  7: Metrics/PerceivedComplexity: Perceived complexity for hash_filter is too high. [8/7]
C:966: 23: Style/PreferredHashMethods: Use Hash#key? instead of Hash#has_key?.
C:979: 81: Metrics/LineLength: Line is too long. [87/80]
C:987:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:987:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:997: 13: Style/EmptyElse: Redundant else-clause.
C:1004:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:1004:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:1012: 13: Style/EmptyElse: Redundant else-clause.
C:1019:  3: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
C:1019:  7: Layout/IndentationConsistency: Inconsistent indentation detected.
C:1045: 81: Metrics/LineLength: Line is too long. [82/80]
C:1046: 81: Metrics/LineLength: Line is too long. [81/80]
C:1065: 81: Metrics/LineLength: Line is too long. [87/80]
C:1066: 81: Metrics/LineLength: Line is too long. [84/80]
C:1067: 81: Metrics/LineLength: Line is too long. [92/80]
C:1084: 81: Metrics/LineLength: Line is too long. [87/80]
C:1085: 81: Metrics/LineLength: Line is too long. [94/80]
C:1087: 81: Metrics/LineLength: Line is too long. [99/80]
C:1091: 81: Metrics/LineLength: Line is too long. [84/80]
C:1097:  7: Naming/MemoizedInstanceVariableName: Memoized variable @_params does not match method name params. Use @params instead.

1 file inspected, 176 offenses detected
exit 1
[34m
[LineProf] ===============================================================[0m

exe/rubocop
[90m               |  26  
[0m[90m               |  27  time = Benchmark.realtime do
[0m[31m 2045.4ms     1 |  28    result = cli.run
[0m[90m               |  29  end
[0m[90m               |  30  
[0m
lib/rubocop/cli.rb
[90m               |  41      # rubocop:disable Metrics/MethodLength, Metrics/AbcSize
[0m[90m               |  42      def run(args = ARGV)
[0m[33m  27.1ms     3 |  43        @options, paths = Options.new.parse(args)
[0m[90m               |  44  
[0m[90m               |  45        if @options[:init]
[0m[90m              .......[0m
[90m               |  49          act_on_options
[0m[90m               |  50          apply_default_formatter
[0m[31m 2018.3ms     1 |  51          execute_runners(paths)
[0m[90m               |  52        end
[0m[90m               |  53      rescue ConfigNotFoundError, IncorrectCopNameError, OptionArgumentError => e
[0m[90m              .......[0m
[90m               |  78          run_all_cops_auto_gen_config(line_length_contents, paths)
[0m[90m               |  79        else
[0m[31m 2018.3ms     1 |  80          execute_runner(paths)
[0m[90m               |  81        end
[0m[90m               |  82      end
[0m[90m              .......[0m
[90m               |  208        runner = Runner.new(@options, @config_store)
[0m[90m               |  209  
[0m[31m 2018.3ms     1 |  210        all_passed = runner.run(paths)
[0m[90m               |  211        display_warning_summary(runner.warnings)
[0m[90m               |  212        display_error_summary(runner.errors)
[0m
lib/rubocop/options.rb
[90m               |  24      def parse(command_line_args)
[0m[90m               |  25        args = args_from_file.concat(args_from_env).concat(command_line_args)
[0m[33m  26.9ms     2 |  26        define_options.parse!(args)
[0m[90m               |  27  
[0m[90m               |  28        @validator.validate_compatibility
[0m[90m              .......[0m
[90m               |  57  
[0m[90m               |  58      def define_options
[0m[33m  26.6ms     2 |  59        OptionParser.new do |opts|
[0m[90m               |  60          opts.banner = 'Usage: rubocop [options] [file1, file2, ...]'
[0m[90m               |  61  
[0m[37m   0.5ms     1 |  62          add_list_options(opts)
[0m[37m   1.1ms     1 |  63          add_only_options(opts)
[0m[33m   5.3ms     1 |  64          add_configuration_options(opts)
[0m[37m   3.2ms     1 |  65          add_formatting_options(opts)
[0m[90m               |  66  
[0m[37m   0.7ms     1 |  67          option(opts, '-r', '--require FILE') { |f| require f }
[0m[90m               |  68  
[0m[37m   1.6ms     1 |  69          add_severity_option(opts)
[0m[37m   0.7ms     1 |  70          add_flags_with_optional_args(opts)
[0m[33m  10.2ms     1 |  71          add_boolean_flags(opts)
[0m[37m   2.3ms     1 |  72          add_aliases(opts)
[0m[90m               |  73  
[0m[37m   0.9ms     1 |  74          option(opts, '-s', '--stdin FILE')
[0m[90m               |  75        end
[0m[90m               |  76      end
[0m[90m               |  77  
[0m[90m               |  78      def add_only_options(opts)
[0m[37m   0.3ms     1 |  79        add_cop_selection_csv_option('except', opts)
[0m[37m   0.3ms     1 |  80        add_cop_selection_csv_option('only', opts)
[0m[37m   0.4ms     1 |  81        option(opts, '--only-guide-cops')
[0m[90m               |  82      end
[0m[90m               |  83  
[0m[90m               |  84      def add_cop_selection_csv_option(option, opts)
[0m[37m   0.7ms     2 |  85        option(opts, "--#{option} [COP1,COP2,...]") do |list|
[0m[90m               |  86          @options[:"#{option}"] =
[0m[90m               |  87            if list.empty?
[0m[90m              .......[0m
[90m               |  96  
[0m[90m               |  97      def add_configuration_options(opts)
[0m[37m   0.4ms     1 |  98        option(opts, '-c', '--config FILE')
[0m[37m   0.6ms     1 |  99        option(opts, '--force-exclusion')
[0m[37m   0.4ms     1 |  100        option(opts, '--ignore-parent-exclusion')
[0m[37m   0.4ms     1 |  101        option(opts, '--force-default-config')
[0m[37m   3.4ms     1 |  102        add_auto_gen_options(opts)
[0m[90m               |  103      end
[0m[90m               |  104  
[0m[90m               |  105      def add_auto_gen_options(opts)
[0m[37m   0.4ms     1 |  106        option(opts, '--auto-gen-config')
[0m[90m               |  107  
[0m[37m   0.6ms     1 |  108        option(opts, '--exclude-limit COUNT') do
[0m[90m               |  109          @validator.validate_exclude_limit_option
[0m[90m               |  110        end
[0m[90m               |  111  
[0m[37m   0.6ms     1 |  112        option(opts, '--no-offense-counts') do
[0m[90m               |  113          @options[:no_offense_counts] = true
[0m[90m               |  114        end
[0m[90m               |  115  
[0m[37m   0.7ms     1 |  116        option(opts, '--auto-gen-only-exclude')
[0m[37m   0.7ms     1 |  117        option(opts, '--no-auto-gen-timestamp') do
[0m[90m               |  118          @options[:no_auto_gen_timestamp] = true
[0m[90m               |  119        end
[0m[90m               |  120  
[0m[37m   0.5ms     1 |  121        option(opts, '--init')
[0m[90m               |  122      end
[0m[90m               |  123  
[0m[90m               |  124      def add_formatting_options(opts)
[0m[37m   2.4ms     1 |  125        option(opts, '-f', '--format FORMATTER') do |key|
[0m[90m               |  126          @options[:formatters] ||= []
[0m[90m               |  127          @options[:formatters] << [key]
[0m[90m               |  128        end
[0m[90m               |  129  
[0m[37m   0.8ms     1 |  130        option(opts, '-o', '--out FILE') do |path|
[0m[90m               |  131          if @options[:formatters]
[0m[90m               |  132            @options[:formatters].last << path
[0m[90m              .......[0m
[90m               |  139      def add_severity_option(opts)
[0m[90m               |  140        table = RuboCop::Cop::Severity::CODE_TABLE.merge(A: :autocorrect)
[0m[37m   0.9ms     1 |  141        option(opts, '--fail-level SEVERITY',
[0m[90m               |  142               RuboCop::Cop::Severity::NAMES + [:autocorrect],
[0m[90m               |  143               table) do |severity|
[0m[90m               |  144          @options[:fail_level] = severity
[0m[90m               |  145        end
[0m[37m   0.6ms     1 |  146        option(opts, '--display-only-fail-level-offenses')
[0m[90m               |  147      end
[0m[90m               |  148  
[0m[90m               |  149      def add_flags_with_optional_args(opts)
[0m[37m   0.7ms     1 |  150        option(opts, '--show-cops [COP1,COP2,...]') do |list|
[0m[90m               |  151          @options[:show_cops] = list.nil? ? [] : list.split(',')
[0m[90m               |  152        end
[0m[90m              .......[0m
[90m               |  154  
[0m[90m               |  155      def add_boolean_flags(opts)
[0m[37m   0.7ms     1 |  156        option(opts, '-F', '--fail-fast')
[0m[37m   0.8ms     1 |  157        option(opts, '-C', '--cache FLAG')
[0m[37m   0.6ms     1 |  158        option(opts, '-d', '--debug')
[0m[37m   0.8ms     1 |  159        option(opts, '-D', '--[no-]display-cop-names')
[0m[37m   0.7ms     1 |  160        option(opts, '-E', '--extra-details')
[0m[37m   0.7ms     1 |  161        option(opts, '-S', '--display-style-guide')
[0m[37m   0.7ms     1 |  162        option(opts, '-R', '--rails')
[0m[37m   0.7ms     1 |  163        option(opts, '-a', '--auto-correct')
[0m[37m   0.7ms     1 |  164        option(opts, '--ignore-disable-comments')
[0m[90m               |  165  
[0m[37m   0.7ms     1 |  166        option(opts, '--safe')
[0m[90m               |  167  
[0m[37m   0.7ms     1 |  168        option(opts, '--[no-]color')
[0m[90m               |  169  
[0m[37m   0.7ms     1 |  170        option(opts, '-v', '--version')
[0m[37m   0.9ms     1 |  171        option(opts, '-V', '--verbose-version')
[0m[37m   0.9ms     1 |  172        option(opts, '-P', '--parallel')
[0m[90m               |  173      end
[0m[90m               |  174  
[0m[90m               |  175      def add_aliases(opts)
[0m[37m   0.8ms     1 |  176        option(opts, '-l', '--lint') do
[0m[90m               |  177          @options[:only] ||= []
[0m[90m               |  178          @options[:only] << 'Lint'
[0m[90m               |  179        end
[0m[37m   0.8ms     1 |  180        option(opts, '-x', '--fix-layout') do
[0m[90m               |  181          @options[:only] ||= []
[0m[90m               |  182          @options[:only] << 'Layout'
[0m[90m               |  183          @options[:auto_correct] = true
[0m[90m               |  184        end
[0m[37m   0.7ms     1 |  185        option(opts, '--safe-auto-correct') do
[0m[90m               |  186          @options[:auto_correct] = true
[0m[90m               |  187        end
[0m[90m              .......[0m
[90m               |  189  
[0m[90m               |  190      def add_list_options(opts)
[0m[37m   0.5ms     1 |  191        option(opts, '-L', '--list-target-files')
[0m[90m               |  192      end
[0m[90m               |  193  
[0m[90m              .......[0m
[90m               |  195      # value, in addition to calling the block if a block is given.
[0m[90m               |  196      def option(opts, *args)
[0m[37m   1.2ms    38 |  197        long_opt_symbol = long_opt_symbol(args)
[0m[90m               |  198        args += Array(OptionsHelp::TEXT[long_opt_symbol])
[0m[33m  24.9ms    38 |  199        opts.on(*args) do |arg|
[0m[90m               |  200          @options[long_opt_symbol] = arg
[0m[90m               |  201          yield arg if block_given?
[0m[90m              .......[0m
[90m               |  206      # e.g. [..., '--auto-correct', ...] to :auto_correct.
[0m[90m               |  207      def long_opt_symbol(args)
[0m[37m   0.3ms   133 |  208        long_opt = args.find { |arg| arg.start_with?('--') }
[0m[37m   0.2ms   114 |  209        long_opt[2..-1].sub('[no-]', '').sub(/ .*/, '')
[0m[37m   0.2ms   114 |  210                       .tr('-', '_').gsub(/[\[\]]/, '').to_sym
[0m[90m               |  211      end
[0m[90m               |  212    end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/optparse.rb
[90m               |  809        lopts.each {|o| @long[o] = sw} if lopts
[0m[90m               |  810        nlopts.each {|o| @long[o] = nsw} if nsw and nlopts
[0m[33m   5.6ms  1940 |  811        used = @short.invert.update(@long.invert)
[0m[37m   3.9ms  1444 |  812        @list.delete_if {|o| Switch === o and !used[o]}
[0m[90m               |  813      end
[0m[90m               |  814      private :update
[0m[90m              .......[0m
[90m               |  842      #
[0m[90m               |  843      def append(*args)
[0m[33m  10.2ms    38 |  844        update(*args)
[0m[90m               |  845        @list.push(args[0])
[0m[90m               |  846      end
[0m[90m              .......[0m
[90m               |  852      def search(id, key)
[0m[90m               |  853        if list = __send__(id)
[0m[37m   1.5ms   749 |  854          val = list.fetch(key) {return nil}
[0m[90m               |  855          block_given? ? yield(val) : val
[0m[90m               |  856        end
[0m[90m              .......[0m
[90m               |  1369      has_arg = false
[0m[90m               |  1370  
[0m[33m  12.6ms    38 |  1371      opts.each do |o|
[0m[90m               |  1372        # argument class
[0m[37m   4.0ms   143 |  1373        next if search(:atype, o) do |pat, c|
[0m[90m               |  1374          klass = notwice(o, klass, 'type')
[0m[90m               |  1375          if not_style and not_style != Switch::NoArgument
[0m[90m              .......[0m
[90m               |  1393        # anything others
[0m[90m               |  1394        case o
[0m[37m   0.3ms   286 |  1395        when Proc, Method
[0m[90m               |  1396          block = notwice(o, block, 'block')
[0m[37m   0.3ms   285 |  1397        when Array, Hash
[0m[90m               |  1398          case pattern
[0m[90m               |  1399          when CompletingHash
[0m[90m              .......[0m
[90m               |  1407        when Module
[0m[90m               |  1408          raise ArgumentError, "unsupported argument type: #{o}", ParseError.filter_backtrace(caller(4))
[0m[37m   1.2ms   987 |  1409        when *ArgumentStyle.keys
[0m[90m               |  1410          style = notwice(ArgumentStyle[o], style, 'style')
[0m[37m   0.2ms   141 |  1411        when /^--no-([^\[\]=\s]*)(.+)?/
[0m[90m               |  1412          q, a = $1, $2
[0m[90m               |  1413          o = notwice(a ? Object : TrueClass, klass, 'type')
[0m[90m              .......[0m
[90m               |  1420          long << "no-#{q}"
[0m[90m               |  1421          nolong << q
[0m[37m   0.2ms   139 |  1422        when /^--\[no-\]([^\[\]=\s]*)(.+)?/
[0m[90m               |  1423          q, a = $1, $2
[0m[90m               |  1424          o = notwice(a ? Object : TrueClass, klass, 'type')
[0m[90m              .......[0m
[90m               |  1433          not_style = Switch::NoArgument
[0m[90m               |  1434          nolong << "no-#{o}"
[0m[37m   0.3ms   137 |  1435        when /^--([^\[\]=\s]*)(.+)?/
[0m[90m               |  1436          q, a = $1, $2
[0m[90m               |  1437          if a
[0m[90m               |  1438            o = notwice(NilClass, klass, 'type')
[0m[90m               |  1439            default_style = default_style.guess(arg = a)
[0m[37m   0.5ms    11 |  1440            default_pattern, conv = search(:atype, o) unless default_pattern
[0m[90m               |  1441          end
[0m[90m               |  1442          ldesc << "--#{q}"
[0m[90m              .......[0m
[90m               |  1471      end
[0m[90m               |  1472  
[0m[37m   1.0ms    50 |  1473      default_pattern, conv = search(:atype, default_style.pattern) unless default_pattern
[0m[90m               |  1474      if !(short.empty? and long.empty?)
[0m[90m               |  1475        if has_arg and default_style == Switch::NoArgument
[0m[90m               |  1476          default_style = Switch::RequiredArgument
[0m[90m               |  1477        end
[0m[37m   0.3ms    76 |  1478        s = (style || default_style).new(pattern || default_pattern,
[0m[90m               |  1479                                         conv, sdesc, ldesc, arg, desc, block)
[0m[90m               |  1480      elsif !block
[0m[90m              .......[0m
[90m               |  1494  
[0m[90m               |  1495    def define(*opts, &block)
[0m[33m  24.6ms   114 |  1496      top.append(*(sw = make_switch(opts, block)))
[0m[90m               |  1497      sw[0]
[0m[90m               |  1498    end
[0m[90m              .......[0m
[90m               |  1503    #
[0m[90m               |  1504    def on(*opts, &block)
[0m[33m  24.8ms    38 |  1505      define(*opts, &block)
[0m[90m               |  1506      self
[0m[90m               |  1507    end
[0m[90m              .......[0m
[90m               |  1560    def order!(argv = default_argv, into: nil, &nonopt)
[0m[90m               |  1561      setter = ->(name, val) {into[name.to_sym] = val} if into
[0m[37m   0.2ms     1 |  1562      parse_in_order(argv, setter, &nonopt)
[0m[90m               |  1563    end
[0m[90m               |  1564  
[0m[90m              .......[0m
[90m               |  1566      opt, arg, val, rest = nil
[0m[90m               |  1567      nonopt ||= proc {|a| throw :terminate, a}
[0m[37m   0.2ms     1 |  1568      argv.unshift(arg) if arg = catch(:terminate) {
[0m[90m               |  1569        while arg = argv.shift
[0m[90m               |  1570          case arg
[0m[90m              .......[0m
[90m               |  1654    def permute!(argv = default_argv, into: nil)
[0m[90m               |  1655      nonopts = []
[0m[37m   0.2ms     3 |  1656      order!(argv, into: into, &nonopts.method(:<<))
[0m[90m               |  1657      argv[0, 0] = nonopts
[0m[90m               |  1658      argv
[0m[90m              .......[0m
[90m               |  1676        order!(argv, into: into)
[0m[90m               |  1677      else
[0m[37m   0.2ms     1 |  1678        permute!(argv, into: into)
[0m[90m               |  1679      end
[0m[90m               |  1680    end
[0m[90m              .......[0m
[90m               |  1734    #
[0m[90m               |  1735    def visit(id, *args, &block)
[0m[37m   4.2ms   189 |  1736      @stack.reverse_each do |el|
[0m[37m   3.1ms   563 |  1737        el.send(id, *args, &block)
[0m[90m               |  1738      end
[0m[90m               |  1739      nil
[0m[90m              .......[0m
[90m               |  1745    #
[0m[90m               |  1746    def search(id, key)
[0m[37m   0.2ms   188 |  1747      block_given = block_given?
[0m[37m   4.6ms   188 |  1748      visit(:search, id, key) do |k|
[0m[90m               |  1749        return block_given ? yield(k) : k
[0m[90m               |  1750      end
[0m
lib/rubocop/runner.rb
[90m               |  32  
[0m[90m               |  33      def run(paths)
[0m[31m 1168.2ms     1 |  34        target_files = find_target_files(paths)
[0m[90m               |  35        if @options[:list_target_files]
[0m[90m               |  36          list_files(target_files)
[0m[90m               |  37        else
[0m[90m               |  38          warm_cache(target_files) if @options[:parallel]
[0m[31m 850.0ms     1 |  39          inspect_files(target_files)
[0m[90m               |  40        end
[0m[90m               |  41      rescue Interrupt
[0m[90m              .......[0m
[90m               |  62      def find_target_files(paths)
[0m[90m               |  63        target_finder = TargetFinder.new(@config_store, @options)
[0m[31m 1168.2ms     1 |  64        target_files = target_finder.find(paths)
[0m[90m               |  65        target_files.each(&:freeze).freeze
[0m[90m               |  66      end
[0m[90m              .......[0m
[90m               |  71        formatter_set.started(files)
[0m[90m               |  72  
[0m[31m 849.9ms     1 |  73        each_inspected_file(files) { |file| inspected_files << file }
[0m[90m               |  74      ensure
[0m[31m 733.2ms     2 |  75        ResultCache.cleanup(@config_store, @options[:debug]) if cached_run?
[0m[90m               |  76        formatter_set.finished(inspected_files.freeze)
[0m[90m               |  77        formatter_set.close_output_files
[0m[90m              .......[0m
[90m               |  79  
[0m[90m               |  80      def each_inspected_file(files)
[0m[31m 116.5ms     2 |  81        files.reduce(true) do |all_passed, file|
[0m[31m 116.5ms     1 |  82          offenses = process_file(file)
[0m[90m               |  83          yield file
[0m[90m               |  84  
[0m[90m              .......[0m
[90m               |  103        file_started(file)
[0m[90m               |  104  
[0m[31m 116.4ms     1 |  105        offenses = file_offenses(file)
[0m[90m               |  106        if @options[:display_only_fail_level_offenses]
[0m[90m               |  107          offenses = offenses.select { |o| considered_failure?(o) }
[0m[90m               |  108        end
[0m[33m  28.7ms     2 |  109        formatter_set.file_finished(file, offenses)
[0m[90m               |  110        offenses
[0m[90m               |  111      rescue InfiniteCorrectionLoop => e
[0m[90m              .......[0m
[90m               |  115  
[0m[90m               |  116      def file_offenses(file)
[0m[31m  87.7ms     1 |  117        file_offense_cache(file) do
[0m[90m               |  118          source = get_processed_source(file)
[0m[90m               |  119          source, offenses = do_inspection_loop(file, source)
[0m[90m              .......[0m
[90m               |  123  
[0m[90m               |  124      def file_offense_cache(file)
[0m[31m  87.7ms     3 |  125        cache = ResultCache.new(file, @options, @config_store) if cached_run?
[0m[90m               |  126        if cache && cache.valid?
[0m[33m   9.0ms     1 |  127          offenses = cache.load
[0m[90m               |  128          # If we're running --auto-correct and the cache says there are
[0m[90m               |  129          # offenses, we need to actually inspect the file. If the cache shows no
[0m
lib/rubocop/target_finder.rb
[90m               |  33        files = []
[0m[90m               |  34  
[0m[31m 1168.2ms     2 |  35        args.uniq.each do |arg|
[0m[90m               |  36          files += if File.directory?(arg)
[0m[90m               |  37                     target_files_in_dir(arg.chomp(File::SEPARATOR))
[0m[90m               |  38                   else
[0m[31m 1168.1ms     1 |  39                     process_explicit_path(arg)
[0m[90m               |  40                   end
[0m[90m               |  41        end
[0m[90m              .......[0m
[90m               |  116  
[0m[90m               |  117      def ruby_extension?(file)
[0m[31m 1168.1ms     3 |  118        ruby_extensions.include?(File.extname(file))
[0m[90m               |  119      end
[0m[90m               |  120  
[0m[90m               |  121      def ruby_extensions
[0m[31m 1168.0ms     2 |  122        ext_patterns = all_cops_include.select do |pattern|
[0m[90m               |  123          pattern.start_with?('**/*.')
[0m[90m               |  124        end
[0m[90m              .......[0m
[90m               |  138  
[0m[90m               |  139      def all_cops_include
[0m[31m 1167.9ms    51 |  140        @config_store.for('.').for_all_cops['Include'].map(&:to_s)
[0m[90m               |  141      end
[0m[90m               |  142  
[0m[90m              .......[0m
[90m               |  161  
[0m[90m               |  162      def ruby_file?(file)
[0m[31m 1168.1ms     2 |  163        stdin? || ruby_extension?(file) || ruby_filename?(file) ||
[0m[90m               |  164          ruby_executable?(file)
[0m[90m               |  165      end
[0m[90m              .......[0m
[90m               |  170  
[0m[90m               |  171      def included_file?(file)
[0m[31m 1168.1ms     1 |  172        ruby_file?(file) || configured_include?(file)
[0m[90m               |  173      end
[0m[90m               |  174  
[0m[90m              .......[0m
[90m               |  176        files = path.include?('*') ? Dir[path] : [path]
[0m[90m               |  177  
[0m[31m 1168.1ms     2 |  178        files.select! { |file| included_file?(file) }
[0m[90m               |  179  
[0m[90m               |  180        return files unless force_exclusion?
[0m
lib/rubocop/config_store.rb
[90m               |  38                File.dirname(file_or_dir)
[0m[90m               |  39              end
[0m[37m   0.5ms     2 |  40        @path_cache[dir] ||= ConfigLoader.configuration_file_for(dir)
[0m[90m               |  41        path = @path_cache[dir]
[0m[90m               |  42        @object_cache[path] ||= begin
[0m[90m               |  43                                  print "For #{dir}: " if ConfigLoader.debug?
[0m[31m 1167.5ms     1 |  44                                  ConfigLoader.configuration_from_file(path)
[0m[90m               |  45                                end
[0m[90m               |  46      end
[0m
lib/rubocop/config_loader.rb
[90m               |  40          path = File.absolute_path(file.is_a?(RemoteConfig) ? file.file : file)
[0m[90m               |  41  
[0m[31m 502.3ms     3 |  42          hash = load_yaml_configuration(path)
[0m[90m               |  43  
[0m[90m               |  44          # Resolve requires first in case they define additional cops
[0m[31m 1108.4ms     6 |  45          resolver.resolve_requires(path, hash)
[0m[90m               |  46  
[0m[33m  34.2ms     3 |  47          add_missing_namespaces(path, hash)
[0m[90m               |  48  
[0m[90m               |  49          resolver.resolve_inheritance_from_gems(hash, hash.delete('inherit_gem'))
[0m[33m  24.5ms     6 |  50          resolver.resolve_inheritance(path, hash, file, debug?)
[0m[90m               |  51  
[0m[90m               |  52          hash.delete('inherit_from')
[0m[90m               |  53  
[0m[33m  39.3ms     3 |  54          Config.create(hash, path)
[0m[90m               |  55        end
[0m[90m               |  56  
[0m[90m               |  57        def add_missing_namespaces(path, hash)
[0m[33m  34.2ms     6 |  58          hash.keys.each do |key|
[0m[33m  33.5ms   454 |  59            q = Cop::Cop.qualified_cop_name(key, path)
[0m[90m               |  60            next if q == key
[0m[90m               |  61  
[0m[90m              .......[0m
[90m               |  77        # there either, the path to the default file is returned.
[0m[90m               |  78        def configuration_file_for(target_dir)
[0m[37m   0.4ms     2 |  79          find_project_dotfile(target_dir) ||
[0m[90m               |  80            find_user_dotfile ||
[0m[90m               |  81            find_user_xdg_config ||
[0m[90m              .......[0m
[90m               |  84  
[0m[90m               |  85        def configuration_from_file(config_file)
[0m[31m 1164.6ms     1 |  86          config = load_file(config_file)
[0m[90m               |  87          return config if config_file == DEFAULT_FILE
[0m[90m               |  88  
[0m[90m              .......[0m
[90m               |  90            print 'Ignoring AllCops/Exclude from parent folders' if debug?
[0m[90m               |  91          else
[0m[37m   1.6ms     1 |  92            add_excludes_from_files(config, config_file)
[0m[90m               |  93          end
[0m[37m   1.3ms     1 |  94          merge_with_default(config, config_file)
[0m[90m               |  95        end
[0m[90m               |  96  
[0m[90m               |  97        def add_excludes_from_files(config, config_file)
[0m[90m               |  98          found_files =
[0m[37m   1.5ms     1 |  99            find_files_upwards(DOTFILE, config_file) +
[0m[90m               |  100            [find_user_dotfile, find_user_xdg_config].compact
[0m[90m               |  101  
[0m[90m              .......[0m
[90m               |  111          @default_configuration ||= begin
[0m[90m               |  112                                       print 'Default ' if debug?
[0m[31m 520.5ms     1 |  113                                       load_file(DEFAULT_FILE)
[0m[90m               |  114                                     end
[0m[90m               |  115        end
[0m[90m              .......[0m
[90m               |  122        # disabled.
[0m[90m               |  123        def merge_with_default(config, config_file)
[0m[31m 522.1ms     6 |  124          resolver.merge_with_default(config, config_file)
[0m[90m               |  125        end
[0m[90m               |  126  
[0m[90m              .......[0m
[90m               |  148  
[0m[90m               |  149        def find_project_dotfile(target_dir)
[0m[37m   0.4ms     2 |  150          find_file_upwards(DOTFILE, target_dir)
[0m[90m               |  151        end
[0m[90m               |  152  
[0m[90m              .......[0m
[90m               |  190  
[0m[90m               |  191        def load_yaml_configuration(absolute_path)
[0m[37m   0.4ms     5 |  192          yaml_code = read_file(absolute_path)
[0m[31m 209.2ms     5 |  193          check_duplication(yaml_code, absolute_path)
[0m[31m 381.3ms     5 |  194          hash = yaml_safe_load(yaml_code, absolute_path) || {}
[0m[90m               |  195  
[0m[90m               |  196          puts "configuration from #{absolute_path}" if debug?
[0m[90m              .......[0m
[90m               |  205        def check_duplication(yaml_code, absolute_path)
[0m[90m               |  206          smart_path = PathUtil.smart_path(absolute_path)
[0m[31m 209.0ms     5 |  207          YAMLDuplicationChecker.check(yaml_code, absolute_path) do |key1, key2|
[0m[90m               |  208            value = key1.value
[0m[90m               |  209            # .start_line is only available since ruby 2.5 / psych 3.0
[0m[90m              .......[0m
[90m               |  225        # found" error.
[0m[90m               |  226        def read_file(absolute_path)
[0m[37m   0.4ms     5 |  227          IO.read(absolute_path, encoding: Encoding::UTF_8)
[0m[90m               |  228        rescue Errno::ENOENT
[0m[90m               |  229          raise ConfigNotFoundError,
[0m[90m              .......[0m
[90m               |  237          # Ruby 2.6+
[0m[90m               |  238          elsif Gem::Version.new(Psych::VERSION) >= Gem::Version.new('3.1.0')
[0m[31m 381.1ms     5 |  239            YAML.safe_load(
[0m[90m               |  240              yaml_code,
[0m[90m               |  241              permitted_classes: [Regexp, Symbol],
[0m
lib/rubocop/file_finder.rb
[90m               |  15  
[0m[90m               |  16      def find_file_upwards(filename, start_dir)
[0m[37m   0.6ms     3 |  17        traverse_files_upwards(filename, start_dir) do |file|
[0m[90m               |  18          # minimize iteration for performance
[0m[90m               |  19          return file if file
[0m[90m              .......[0m
[90m               |  23      def find_files_upwards(filename, start_dir)
[0m[90m               |  24        files = []
[0m[37m   1.5ms     1 |  25        traverse_files_upwards(filename, start_dir) do |file|
[0m[90m               |  26          files << file
[0m[90m               |  27        end
[0m[90m              .......[0m
[90m               |  32  
[0m[90m               |  33      def traverse_files_upwards(filename, start_dir)
[0m[37m   2.1ms    40 |  34        Pathname.new(start_dir).expand_path.ascend do |dir|
[0m[90m               |  35          break if FileFinder.root_level?(dir)
[0m[90m               |  36  
[0m[37m   1.2ms    12 |  37          file = dir + filename
[0m[90m               |  38          yield(file.to_s) if file.exist?
[0m[90m               |  39        end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/pathname.rb
[90m               |  44        return nil
[0m[90m               |  45      else
[0m[37m   0.2ms   170 |  46        return path[0, path.rindex(base)], base
[0m[90m               |  47      end
[0m[90m               |  48    end
[0m[90m              .......[0m
[90m               |  186    # This is same as <code>self + '..'</code>.
[0m[90m               |  187    def parent
[0m[37m   0.5ms     4 |  188      self + '..'
[0m[90m               |  189    end
[0m[90m               |  190  
[0m[90m              .......[0m
[90m               |  330        path, = r
[0m[90m               |  331        break if path.empty?
[0m[37m   0.2ms    48 |  332        yield self.class.new(del_trailing_separator(path))
[0m[90m               |  333      end
[0m[90m               |  334    end
[0m[90m              .......[0m
[90m               |  349    def +(other)
[0m[90m               |  350      other = Pathname.new(other) unless Pathname === other
[0m[37m   1.8ms   160 |  351      Pathname.new(plus(@path, other.to_s))
[0m[90m               |  352    end
[0m[90m               |  353    alias / +
[0m[90m              .......[0m
[90m               |  357      index_list2 = []
[0m[90m               |  358      basename_list2 = []
[0m[37m   0.4ms    42 |  359      while r2 = chop_basename(prefix2)
[0m[90m               |  360        prefix2, basename2 = r2
[0m[90m               |  361        index_list2.unshift prefix2.length
[0m[90m              .......[0m
[90m               |  369          basename_list2.shift
[0m[90m               |  370        end
[0m[37m   0.3ms    24 |  371        break unless r1 = chop_basename(prefix1)
[0m[90m               |  372        prefix1, basename1 = r1
[0m[90m               |  373        next if basename1 == '.'
[0m[90m              .......[0m
[90m               |  379        basename_list2.shift
[0m[90m               |  380      end
[0m[37m   0.2ms    20 |  381      r1 = chop_basename(prefix1)
[0m[90m               |  382      if !r1 && (r1 = /#{SEPARATOR_PAT}/o.match?(File.basename(prefix1)))
[0m[90m               |  383        while !basename_list2.empty? && basename_list2.first == '..'
[0m[90m              .......[0m
[90m               |  410      result = Pathname.new(result) unless Pathname === result
[0m[90m               |  411      return result if result.absolute?
[0m[37m   0.3ms     2 |  412      args.reverse_each {|arg|
[0m[90m               |  413        arg = Pathname.new(arg) unless Pathname === arg
[0m[90m               |  414        result = arg + result
[0m[90m               |  415        return result if result.absolute?
[0m[90m               |  416      }
[0m[37m   0.2ms     2 |  417      self + result
[0m[90m               |  418    end
[0m[90m               |  419  
[0m
lib/rubocop/yaml_duplication_checker.rb
[90m               |   6      def self.check(yaml_string, filename, &on_duplicated)
[0m[90m               |   7        # Specify filename to display helpful message when it raises an error.
[0m[31m 151.6ms     5 |   8        tree = YAML.parse(yaml_string, filename)
[0m[90m               |   9        return unless tree
[0m[90m               |  10  
[0m[31m  57.4ms     5 |  11        traverse(tree, &on_duplicated)
[0m[90m               |  12      end
[0m[90m               |  13  
[0m[90m               |  14      def self.traverse(tree, &on_duplicated)
[0m[90m               |  15        case tree
[0m[37m   4.3ms  3682 |  16        when Psych::Nodes::Mapping
[0m[31m  99.9ms  2840 |  17          tree.children.each_slice(2).with_object([]) do |(key, value), keys|
[0m[33m  25.9ms  6052 |  18            exist = keys.find { |key2| key2.value == key.value }
[0m[90m               |  19            on_duplicated.call(exist, key) if exist
[0m[90m               |  20            keys << key
[0m[31m  59.1ms  3026 |  21            traverse(value, &on_duplicated)
[0m[90m               |  22          end
[0m[90m               |  23        else
[0m[90m              .......[0m
[90m               |  25          return unless children
[0m[90m               |  26  
[0m[31m  61.1ms   889 |  27          children.each { |c| traverse(c, &on_duplicated) }
[0m[90m               |  28        end
[0m[90m               |  29      end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych.rb
[90m               |  347      end
[0m[90m               |  348  
[0m[31m 176.4ms     7 |  349      result = parse(yaml, filename: filename)
[0m[90m               |  350      return fallback unless result
[0m[90m               |  351  
[0m[37m   0.2ms    31 |  352      class_loader = ClassLoader::Restricted.new(permitted_classes.map(&:to_s),
[0m[90m               |  353                                                 permitted_symbols.map(&:to_s))
[0m[90m               |  354      scanner      = ScalarScanner.new class_loader
[0m[90m              .......[0m
[90m               |  358                  Visitors::NoAliasRuby.new scanner, class_loader
[0m[90m               |  359                end
[0m[31m 267.9ms     7 |  360      result = visitor.accept result
[0m[90m               |  361      symbolize_names!(result) if symbolize_names
[0m[90m               |  362      result
[0m[90m              .......[0m
[90m               |  388      end
[0m[90m               |  389  
[0m[31m 327.9ms    12 |  390      parse_stream(yaml, filename: filename) do |node|
[0m[90m               |  391        return node
[0m[90m               |  392      end
[0m[90m              .......[0m
[90m               |  453  
[0m[90m               |  454      if block_given?
[0m[37m   0.3ms    48 |  455        parser = Psych::Parser.new(Handlers::DocumentStream.new(&block))
[0m[31m 327.5ms 32356 |  456        parser.parse yaml, filename
[0m[90m               |  457      else
[0m[90m               |  458        parser = self.parser
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/tree_builder.rb
[90m               |  95  
[0m[90m               |  96      def scalar value, anchor, tag, plain, quoted, style
[0m[31m  54.2ms 25364 |  97        s = Nodes::Scalar.new(value,anchor,tag,plain,quoted,style)
[0m[31m  80.5ms 12682 |  98        set_location(s)
[0m[90m               |  99        @last.children << s
[0m[90m               |  100        s
[0m[90m              .......[0m
[90m               |  110      private
[0m[90m               |  111      def push value
[0m[37m   2.1ms  1751 |  112        @stack.push value
[0m[90m               |  113        @last = value
[0m[90m               |  114      end
[0m[90m               |  115  
[0m[90m               |  116      def pop
[0m[37m   2.2ms  1739 |  117        x = @stack.pop
[0m[37m   2.0ms  1739 |  118        @last = @stack.last
[0m[90m               |  119        x
[0m[90m               |  120      end
[0m[90m               |  121  
[0m[90m               |  122      def set_location(node)
[0m[33m  18.1ms 12682 |  123        set_start_location(node)
[0m[33m  16.5ms 12682 |  124        set_end_location(node)
[0m[90m               |  125      end
[0m[90m               |  126  
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/nodes/mapping.rb
[90m               |  47        # See also Psych::Handler#start_mapping
[0m[90m               |  48        def initialize anchor = nil, tag = nil, implicit = true, style = BLOCK
[0m[37m   1.7ms  1239 |  49          super()
[0m[90m               |  50          @anchor   = anchor
[0m[90m               |  51          @tag      = tag
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/nodes/sequence.rb
[90m               |  72        # See Psych::Handler#start_sequence
[0m[90m               |  73        def initialize anchor = nil, tag = nil, implicit = true, style = BLOCK
[0m[37m   0.7ms   488 |  74          super()
[0m[90m               |  75          @anchor   = anchor
[0m[90m               |  76          @tag      = tag
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/class_loader.rb
[90m               |  36      constants.each do |const|
[0m[90m               |  37        konst = const_get const
[0m[37m   0.2ms    18 |  38        define_method(const.to_s.downcase) do
[0m[90m               |  39          load konst
[0m[90m               |  40        end
[0m[90m              .......[0m
[90m               |  80  
[0m[90m               |  81        def symbolize sym
[0m[37m   0.3ms    16 |  82          return super if @symbols.empty?
[0m[90m               |  83  
[0m[90m               |  84          if @symbols.include? sym
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/visitors/to_ruby.rb
[90m               |  30  
[0m[90m               |  31        def accept target
[0m[31m 1021.2ms  7713 |  32          result = super
[0m[90m               |  33          return result if @domain_types.empty? || !target.tag
[0m[90m               |  34  
[0m[90m              .......[0m
[90m               |  45  
[0m[90m               |  46        def deserialize o
[0m[33m  24.8ms  6780 |  47          if klass = resolve_class(Psych.load_tags[o.tag])
[0m[90m               |  48            instance = klass.allocate
[0m[90m               |  49  
[0m[90m              .......[0m
[90m               |  58  
[0m[90m               |  59          return o.value if o.quoted
[0m[31m  53.0ms  5356 |  60          return @ss.tokenize(o.value) unless o.tag
[0m[90m               |  61  
[0m[90m               |  62          case o.tag
[0m[90m              .......[0m
[90m               |  121  
[0m[90m               |  122        def visit_Psych_Nodes_Scalar o
[0m[31m 112.0ms 13560 |  123          register o, deserialize(o)
[0m[90m               |  124        end
[0m[90m               |  125  
[0m[90m               |  126        def visit_Psych_Nodes_Sequence o
[0m[37m   0.9ms   255 |  127          if klass = resolve_class(Psych.load_tags[o.tag])
[0m[90m               |  128            instance = klass.allocate
[0m[90m               |  129  
[0m[90m              .......[0m
[90m               |  138  
[0m[90m               |  139          case o.tag
[0m[37m   0.3ms   255 |  140          when nil
[0m[33m  27.4ms   255 |  141            register_empty(o)
[0m[90m               |  142          when '!omap', 'tag:yaml.org,2002:omap'
[0m[90m               |  143            map = register(o, Psych::Omap.new)
[0m[90m              .......[0m
[90m               |  160            return revive(resolve_class(Psych.load_tags[o.tag]), o)
[0m[90m               |  161          end
[0m[31m 501.0ms  1342 |  162          return revive_hash(register(o, {}), o) unless o.tag
[0m[90m               |  163  
[0m[90m               |  164          case o.tag
[0m[90m              .......[0m
[90m               |  309  
[0m[90m               |  310        def visit_Psych_Nodes_Document o
[0m[31m 267.7ms    14 |  311          accept o.root
[0m[90m               |  312        end
[0m[90m               |  313  
[0m[90m              .......[0m
[90m               |  327  
[0m[90m               |  328        def register_empty object
[0m[37m   0.3ms   255 |  329          list = register(object, [])
[0m[33m  26.1ms  1633 |  330          object.children.each { |c| list.push accept c }
[0m[90m               |  331          list
[0m[90m               |  332        end
[0m[90m              .......[0m
[90m               |  334        SHOVEL = '<<'
[0m[90m               |  335        def revive_hash hash, o
[0m[31m 498.4ms  2013 |  336          o.children.each_slice(2) { |k,v|
[0m[31m 113.7ms  3505 |  337            key = accept(k)
[0m[31m 368.4ms  3505 |  338            val = accept(v)
[0m[90m               |  339  
[0m[90m               |  340            if key == SHOVEL && k.tag != "tag:yaml.org,2002:str"
[0m[90m              .......[0m
[90m               |  389        # Convert +klassname+ to a Class
[0m[90m               |  390        def resolve_class klassname
[0m[33m   8.5ms  7035 |  391          class_loader.load klassname
[0m[90m               |  392        end
[0m[90m               |  393      end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/visitors/visitor.rb
[90m               |   4      class Visitor
[0m[90m               |   5        def accept target
[0m[31m 1001.9ms  7713 |   6          visit target
[0m[90m               |   7        end
[0m[90m               |   8  
[0m[90m              .......[0m
[90m               |  14  
[0m[90m               |  15        def visit target
[0m[31m 957.5ms 23139 |  16          send DISPATCH[target.class], target
[0m[90m               |  17        end
[0m[90m               |  18      end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/psych/scalar_scanner.rb
[90m               |  32      def tokenize string
[0m[90m               |  33        return nil if string.empty?
[0m[33m   7.2ms  5356 |  34        return string if @string_cache.key?(string)
[0m[37m   3.1ms  2495 |  35        return @symbol_cache[string] if @symbol_cache.key?(string)
[0m[90m               |  36  
[0m[90m               |  37        case string
[0m[90m               |  38        # Check for a String type, being careful not to get caught by hash keys, hex values, and
[0m[90m               |  39        # special floats (e.g., -.inf).
[0m[33m   8.8ms  2548 |  40        when /^[^\d\.:-]?[A-Za-z_\s!@#\$%\^&\*\(\)\{\}\<\>\|\/\\~;=]+/, /\n/
[0m[90m               |  41          if string.length > 5
[0m[90m               |  42            @string_cache[string] = true
[0m[90m              .......[0m
[90m               |  45  
[0m[90m               |  46          case string
[0m[37m   1.3ms   949 |  47          when /^[^ytonf~]/i
[0m[90m               |  48            @string_cache[string] = true
[0m[90m               |  49            string
[0m[37m   2.2ms  1612 |  50          when '~', /^null$/i
[0m[90m               |  51            nil
[0m[37m   1.7ms   797 |  52          when /^(yes|true|on)$/i
[0m[90m               |  53            true
[0m[37m   0.4ms   181 |  54          when /^(no|false|off)$/i
[0m[90m               |  55            false
[0m[90m               |  56          else
[0m[90m              .......[0m
[90m               |  81            @symbol_cache[string] = class_loader.symbolize($2.sub(/^:/, ''))
[0m[90m               |  82          else
[0m[37m   0.4ms    32 |  83            @symbol_cache[string] = class_loader.symbolize(string.sub(/^:/, ''))
[0m[90m               |  84          end
[0m[90m               |  85        when /^[-+]?[0-9][0-9_]*(:[0-5]?[0-9]){1,2}$/
[0m[90m              .......[0m
[90m               |  103          end
[0m[90m               |  104        else
[0m[37m   0.4ms    70 |  105          int = parse_int string.gsub(/[,_]/, '')
[0m[90m               |  106          return int if int
[0m[90m               |  107  
[0m
lib/rubocop/config_loader_resolver.rb
[90m               |   9      def resolve_requires(path, hash)
[0m[90m               |  10        config_dir = File.dirname(path)
[0m[31m 1108.3ms    11 |  11        Array(hash.delete('require')).each do |r|
[0m[90m               |  12          if r.start_with?('.')
[0m[90m               |  13            require(File.join(config_dir, r))
[0m[90m               |  14          else
[0m[31m 1108.3ms     9 |  15            require(r)
[0m[90m               |  16          end
[0m[90m               |  17        end
[0m[90m              .......[0m
[90m               |  20      def resolve_inheritance(path, hash, file, debug)
[0m[90m               |  21        inherited_files = Array(hash['inherit_from'])
[0m[33m  24.3ms     3 |  22        base_configs(path, inherited_files, file)
[0m[90m               |  23          .reverse.each_with_index do |base_config, index|
[0m[90m               |  24          base_config.each do |k, v|
[0m[90m              .......[0m
[90m               |  57      # only cops explicitly disabled in user configuration are disabled.
[0m[90m               |  58      def merge_with_default(config, config_file)
[0m[31m 520.5ms     3 |  59        default_configuration = ConfigLoader.default_configuration
[0m[90m               |  60  
[0m[90m               |  61        disabled_by_default = config.for_all_cops['DisabledByDefault']
[0m[90m              .......[0m
[90m               |  73  
[0m[90m               |  74        opts = { inherit_mode: config['inherit_mode'] || {}, unset_nil: true }
[0m[37m   1.6ms     9 |  75        Config.new(merge(default_configuration, config, opts), config_file)
[0m[90m               |  76      end
[0m[90m               |  77  
[0m[90m              .......[0m
[90m               |  83      def merge(base_hash, derived_hash, **opts)
[0m[90m               |  84        result = base_hash.merge(derived_hash)
[0m[37m   0.4ms   102 |  85        keys_appearing_in_both = base_hash.keys & derived_hash.keys
[0m[37m   1.5ms    34 |  86        keys_appearing_in_both.each do |key|
[0m[90m               |  87          if opts[:unset_nil] && derived_hash[key].nil?
[0m[90m               |  88            result.delete(key)
[0m[90m               |  89          elsif base_hash[key].is_a?(Hash)
[0m[37m   0.8ms    88 |  90            result[key] = merge(base_hash[key], derived_hash[key], **opts)
[0m[90m               |  91          elsif should_union?(base_hash, key, opts[:inherit_mode])
[0m[90m               |  92            result[key] = base_hash[key] | derived_hash[key]
[0m[90m              .......[0m
[90m               |  138  
[0m[90m               |  139      def base_configs(path, inherit_from, file)
[0m[33m  24.3ms     9 |  140        configs = Array(inherit_from).compact.map do |f|
[0m[33m  24.3ms     2 |  141          ConfigLoader.load_file(inherited_file(path, f, file))
[0m[90m               |  142        end
[0m[90m               |  143  
[0m[90m              .......[0m
[90m               |  146  
[0m[90m               |  147      def inherited_file(path, inherit_from, file)
[0m[37m   0.5ms     1 |  148        if remote_file?(inherit_from)
[0m[90m               |  149          RemoteConfig.new(inherit_from, File.dirname(path))
[0m[90m               |  150        elsif file.is_a?(RemoteConfig)
[0m[90m              .......[0m
[90m               |  157  
[0m[90m               |  158      def remote_file?(uri)
[0m[37m   0.2ms     1 |  159        regex = URI::DEFAULT_PARSER.make_regexp(%w[http https])
[0m[90m               |  160        uri =~ /\A#{regex}\z/
[0m[90m               |  161      end
[0m
lib/rubocop/cop/internal_affairs.rb
[90m               |   1  # frozen_string_literal: true
[0m[90m               |   2  
[0m[37m   4.3ms     3 |   3  require_relative 'internal_affairs/node_destructuring'
[0m[37m   3.0ms     3 |   4  require_relative 'internal_affairs/node_type_predicate'
[0m[37m   3.8ms     3 |   5  require_relative 'internal_affairs/offense_location_keyword'
[0m[33m   5.3ms     3 |   6  require_relative 'internal_affairs/redundant_message_argument'
[0m[37m   3.3ms     3 |   7  require_relative 'internal_affairs/redundant_location_argument'
[0m[37m   3.0ms     3 |   8  require_relative 'internal_affairs/useless_message_assertion'
[0m
lib/rubocop/cop/internal_affairs/node_destructuring.rb
[90m               |  20                'of manually destructuring nodes.'.freeze
[0m[90m               |  21  
[0m[37m   1.5ms     1 |  22          def_node_matcher :node_variable?, <<-PATTERN
[0m[90m               |  23            {(lvar [#node_suffix? _]) (send nil? [#node_suffix? _])}
[0m[90m               |  24          PATTERN
[0m[90m               |  25  
[0m[37m   2.4ms     1 |  26          def_node_matcher :node_destructuring?, <<-PATTERN
[0m[90m               |  27            {(masgn (mlhs ...) {(send #node_variable? :children) (array (splat #node_variable?))})}
[0m[90m               |  28          PATTERN
[0m
lib/rubocop/cop/cop.rb
[90m               |  46  
[0m[90m               |  47        def self.qualified_cop_name(name, origin)
[0m[33m  32.3ms   454 |  48          registry.qualified_cop_name(name, origin)
[0m[90m               |  49        end
[0m[90m               |  50  
[0m[90m              .......[0m
[90m               |  54  
[0m[90m               |  55        def self.inherited(subclass)
[0m[33m   7.6ms   102 |  56          registry.enlist(subclass)
[0m[90m               |  57        end
[0m[90m               |  58  
[0m[90m               |  59        def self.badge
[0m[37m   2.0ms   204 |  60          @badge ||= Badge.for(name)
[0m[90m               |  61        end
[0m[90m               |  62  
[0m[90m               |  63        def self.cop_name
[0m[33m  10.4ms  1898 |  64          badge.to_s
[0m[90m               |  65        end
[0m[90m               |  66  
[0m[90m               |  67        def self.department
[0m[37m   1.4ms  1048 |  68          badge.department
[0m[90m               |  69        end
[0m[90m               |  70  
[0m[90m              .......[0m
[90m               |  78          return false unless given_names
[0m[90m               |  79  
[0m[33m  13.5ms  1692 |  80          given_names.include?(cop_name) ||
[0m[33m   5.3ms  2532 |  81            given_names.include?(department.to_s)
[0m[90m               |  82        end
[0m[90m               |  83  
[0m
lib/rubocop/cop/registry.rb
[90m               |  32  
[0m[90m               |  33        def enlist(cop)
[0m[37m   3.7ms   205 |  34          @registry[cop.badge] = cop
[0m[37m   0.5ms   102 |  35          @departments[cop.department] ||= []
[0m[37m   0.4ms   102 |  36          @departments[cop.department] << cop
[0m[37m   1.6ms   102 |  37          @cops_by_cop_name[cop.cop_name] << cop
[0m[90m               |  38        end
[0m[90m               |  39  
[0m[90m              .......[0m
[90m               |  57  
[0m[90m               |  58        def contains_cop_matching?(names)
[0m[33m  26.8ms   850 |  59          cops.any? { |cop| cop.match?(names) }
[0m[90m               |  60        end
[0m[90m               |  61  
[0m[90m              .......[0m
[90m               |  93        # @return [String] Qualified cop name
[0m[90m               |  94        def qualified_cop_name(name, path)
[0m[33m  11.3ms   454 |  95          badge = Badge.parse(name)
[0m[33m  17.8ms   454 |  96          return name if registered?(badge)
[0m[90m               |  97  
[0m[37m   1.5ms     4 |  98          potential_badges = qualify_badge(badge)
[0m[90m               |  99  
[0m[90m               |  100          case potential_badges.size
[0m[90m              .......[0m
[90m               |  169        def qualify_badge(badge)
[0m[90m               |  170          @departments
[0m[37m   0.6ms    56 |  171            .map { |department, _| badge.with_department(department) }
[0m[37m   0.8ms    52 |  172            .select { |potential_badge| registered?(potential_badge) }
[0m[90m               |  173        end
[0m[90m               |  174  
[0m[90m              .......[0m
[90m               |  184  
[0m[90m               |  185        def registered?(badge)
[0m[33m  17.3ms  1454 |  186          @registry.key?(badge)
[0m[90m               |  187        end
[0m[90m               |  188      end
[0m
lib/rubocop/cop/badge.rb
[90m               |  24  
[0m[90m               |  25        def self.for(class_name)
[0m[37m   1.2ms   408 |  26          new(*class_name.split('::').last(2))
[0m[90m               |  27        end
[0m[90m               |  28  
[0m[90m               |  29        def self.parse(identifier)
[0m[37m   2.3ms   518 |  30          parts = identifier.split('/', 2)
[0m[90m               |  31  
[0m[90m               |  32          raise InvalidBadge, identifier if parts.size > 2
[0m[90m               |  33  
[0m[37m   0.6ms   518 |  34          if parts.one?
[0m[90m               |  35            new(nil, *parts)
[0m[90m               |  36          else
[0m[37m   3.4ms  1028 |  37            new(*parts)
[0m[90m               |  38          end
[0m[90m               |  39        end
[0m[90m               |  40  
[0m[90m               |  41        def initialize(department, cop_name)
[0m[37m   0.9ms   664 |  42          @department = department.to_sym if department
[0m[90m               |  43          @cop_name   = cop_name
[0m[90m               |  44        end
[0m[90m               |  45  
[0m[90m               |  46        def ==(other)
[0m[33m   8.4ms   902 |  47          hash == other.hash
[0m[90m               |  48        end
[0m[90m               |  49        alias eql? ==
[0m[90m               |  50  
[0m[90m               |  51        def hash
[0m[33m  10.7ms  4518 |  52          [department, cop_name].hash
[0m[90m               |  53        end
[0m[90m               |  54  
[0m[90m              .......[0m
[90m               |  59  
[0m[90m               |  60        def to_s
[0m[37m   4.8ms  1898 |  61          qualified? ? "#{department}/#{cop_name}" : cop_name
[0m[90m               |  62        end
[0m[90m               |  63  
[0m[90m               |  64        def qualified?
[0m[37m   1.1ms   949 |  65          !department.nil?
[0m[90m               |  66        end
[0m[90m               |  67  
[0m[90m               |  68        def with_department(department)
[0m[37m   0.4ms   144 |  69          self.class.new(department, cop_name)
[0m[90m               |  70        end
[0m[90m               |  71      end
[0m
lib/rubocop/node_pattern.rb
[90m               |  169          @unify    = {} # named wildcard -> temp variable number
[0m[90m               |  170          @params   = 0  # highest % (param) number seen
[0m[31m 334.3ms   162 |  171          run(node_var)
[0m[90m               |  172        end
[0m[90m               |  173  
[0m[90m               |  174        def run(node_var)
[0m[31m  63.0ms   162 |  175          @tokens = Compiler.tokens(@string)
[0m[90m               |  176  
[0m[31m 269.3ms   324 |  177          @match_code = with_context(compile_expr, node_var, use_temp_node: false)
[0m[37m   0.3ms   162 |  178          @match_code.prepend("(captures = Array.new(#{@captures})) && ") \
[0m[90m               |  179            if @captures > 0
[0m[90m               |  180  
[0m[90m              .......[0m
[90m               |  183  
[0m[90m               |  184        # rubocop:disable Metrics/MethodLength, Metrics/AbcSize
[0m[37m   1.5ms  1197 |  185        def compile_expr(token = tokens.shift)
[0m[90m               |  186          # read a single pattern-matching expression from the token stream,
[0m[90m               |  187          # return Ruby code which performs the corresponding matching operation
[0m[90m              .......[0m
[90m               |  196          #   a sequence (aka seq_head, e.g. "(seq_head first_node_arg ...")
[0m[90m               |  197          case token
[0m[31m 448.7ms  2914 |  198          when '('       then compile_seq
[0m[31m 154.6ms  2240 |  199          when '{'       then compile_union
[0m[37m   3.6ms  1823 |  200          when '['       then compile_intersect
[0m[37m   2.7ms  1826 |  201          when '!'       then compile_negation
[0m[31m  51.5ms  1939 |  202          when '$'       then compile_capture
[0m[37m   2.9ms  1646 |  203          when '^'       then compile_ascend
[0m[37m   3.5ms  1884 |  204          when WILDCARD  then compile_wildcard(token[1..-1])
[0m[37m   2.6ms  1561 |  205          when FUNCALL   then compile_funcall(token)
[0m[37m   4.3ms  2271 |  206          when LITERAL   then compile_literal(token)
[0m[37m   2.2ms   882 |  207          when PREDICATE then compile_predicate(token)
[0m[33m   5.3ms  1036 |  208          when NODE      then compile_nodetype(token)
[0m[90m               |  209          when PARAM     then compile_param(token[1..-1])
[0m[90m               |  210          when CLOSING   then fail_due_to("#{token} in invalid position")
[0m[90m              .......[0m
[90m               |  216  
[0m[90m               |  217        def tokens_until(stop, what)
[0m[37m   3.5ms  2652 |  218          return to_enum __method__, stop, what unless block_given?
[0m[90m               |  219  
[0m[37m   0.8ms   663 |  220          fail_due_to("empty #{what}") if tokens.first == stop && what
[0m[37m   3.5ms  2977 |  221          yield until tokens.first == stop
[0m[37m   0.8ms   663 |  222          tokens.shift
[0m[90m               |  223        end
[0m[90m               |  224  
[0m[90m               |  225        def compile_seq
[0m[31m 297.7ms  3214 |  226          terms = tokens_until(')', 'sequence').map { variadic_seq_term }
[0m[31m 145.3ms  1329 |  227          Sequence.new(self, *terms).compile
[0m[90m               |  228        end
[0m[90m               |  229  
[0m[90m              .......[0m
[90m               |  233  
[0m[90m               |  234        def variadic_seq_term
[0m[37m   1.7ms  1442 |  235          token = tokens.shift
[0m[90m               |  236          case token
[0m[37m   2.1ms  1472 |  237          when CAPTURED_REST then compile_captured_ellipsis
[0m[37m   3.1ms  1550 |  238          when REST          then compile_ellipsis
[0m[37m   1.4ms  1274 |  239          when '$<'          then compile_any_order(next_capture)
[0m[37m   2.6ms  1275 |  240          when '<'           then compile_any_order
[0m[31m 257.3ms  1273 |  241          else                    [1, compile_expr(token)]
[0m[90m               |  242          end
[0m[90m               |  243        end
[0m[90m              .......[0m
[90m               |  248        class Sequence < SimpleDelegator
[0m[90m               |  249          def initialize(compiler, *arity_term_list)
[0m[37m   0.8ms   443 |  250            @arities, @terms = arity_term_list.transpose
[0m[90m               |  251  
[0m[37m   2.9ms   443 |  252            super(compiler)
[0m[33m  12.6ms  3313 |  253            @variadic_index = @arities.find_index { |a| a.is_a?(Range) }
[0m[90m               |  254            fail_due_to 'multiple variable patterns in same sequence' \
[0m[33m   5.2ms  1383 |  255              if @variadic_index && !@arities.one? { |a| a.is_a?(Range) }
[0m[90m               |  256          end
[0m[90m               |  257  
[0m[90m               |  258          def compile
[0m[37m   0.3ms   274 |  259            [
[0m[37m   4.4ms   446 |  260              compile_guard_clause,
[0m[33m   9.7ms   443 |  261              compile_child_nb_guard,
[0m[33m  10.4ms   443 |  262              compile_seq_head,
[0m[31m  68.6ms   443 |  263              *compile_first_terms,
[0m[33m  12.6ms   443 |  264              compile_variadic_term,
[0m[33m   5.2ms   443 |  265              *compile_last_terms
[0m[37m   1.7ms   886 |  266            ].compact.join(" &&\n") << SEQ_HEAD_GUARD
[0m[90m               |  267          end
[0m[90m               |  268  
[0m[90m              .......[0m
[90m               |  270  
[0m[90m               |  271          def first_terms_arity
[0m[37m   4.4ms  1215 |  272            first_terms_range { |r| @arities[r].inject(0, :+) } || 0
[0m[90m               |  273          end
[0m[90m               |  274  
[0m[90m               |  275          def last_terms_arity
[0m[37m   2.4ms  1288 |  276            last_terms_range { |r| @arities[r].inject(0, :+) } || 0
[0m[90m               |  277          end
[0m[90m               |  278  
[0m[90m               |  279          def first_terms_range
[0m[37m   1.4ms  1052 |  280            yield 1..(@variadic_index || @terms.size) - 1 if seq_head?
[0m[90m               |  281          end
[0m[90m               |  282  
[0m[90m              .......[0m
[90m               |  290  
[0m[90m               |  291          def compile_child_nb_guard
[0m[33m   6.5ms   886 |  292            min = first_terms_arity + last_terms_arity
[0m[37m   0.6ms   443 |  293            "#{CUR_NODE}.children.size #{@variadic_index ? '>' : '='}= #{min}"
[0m[90m               |  294          end
[0m[90m               |  295  
[0m[90m               |  296          def term(index, range)
[0m[90m               |  297            t = @terms[index]
[0m[37m   1.2ms  1002 |  298            if t.respond_to? :call
[0m[90m               |  299              t.call(range)
[0m[90m               |  300            else
[0m[31m  51.5ms  1942 |  301              with_child_context(t, range.begin)
[0m[90m               |  302            end
[0m[90m               |  303          end
[0m[90m               |  304  
[0m[90m               |  305          def compile_seq_head
[0m[37m   0.5ms   443 |  306            return unless seq_head?
[0m[90m               |  307  
[0m[90m               |  308            fail_due_to 'sequences can not start with <' \
[0m[37m   0.5ms   440 |  309              if @terms[0].respond_to? :call
[0m[90m               |  310  
[0m[33m   7.0ms   440 |  311            with_seq_head_context(@terms[0])
[0m[90m               |  312          end
[0m[90m               |  313  
[0m[90m               |  314          def compile_first_terms
[0m[31m  67.6ms   883 |  315            first_terms_range { |range| compile_terms(range, 0) }
[0m[90m               |  316          end
[0m[90m               |  317  
[0m[90m               |  318          def compile_last_terms
[0m[37m   4.1ms   950 |  319            last_terms_range { |r| compile_terms(r, -last_terms_arity) }
[0m[90m               |  320          end
[0m[90m               |  321  
[0m[90m               |  322          def compile_terms(index_range, start)
[0m[31m  65.3ms  1218 |  323            index_range.map do |i|
[0m[90m               |  324              current = start
[0m[37m   1.0ms   833 |  325              start += @arities.fetch(i)
[0m[31m  58.0ms   833 |  326              term(i, current..start - 1)
[0m[90m               |  327            end
[0m[90m               |  328          end
[0m[90m               |  329  
[0m[90m               |  330          def compile_variadic_term
[0m[33m  11.5ms   612 |  331            variadic_arity { |arity| term(@variadic_index, arity) }
[0m[90m               |  332          end
[0m[90m               |  333  
[0m[90m              .......[0m
[90m               |  335            return unless @variadic_index
[0m[90m               |  336  
[0m[37m   1.5ms   166 |  337            first = @variadic_index > 0 ? first_terms_arity : SEQ_HEAD_INDEX
[0m[37m   1.3ms   338 |  338            yield first..-last_terms_arity - 1
[0m[90m               |  339          end
[0m[90m               |  340        end
[0m[90m              .......[0m
[90m               |  346            # Consider ($...) like (_ $...):
[0m[90m               |  347            range = 0..range.end if range.begin == SEQ_HEAD_INDEX
[0m[90m               |  348            "(#{capture} = #{CUR_NODE}.children[#{range}])"
[0m[90m               |  349          }
[0m[90m               |  350          [0..Float::INFINITY, block]
[0m[90m              .......[0m
[90m               |  352  
[0m[90m               |  353        def compile_ellipsis
[0m[37m   0.2ms   138 |  354          [0..Float::INFINITY, 'true']
[0m[90m               |  355        end
[0m[90m               |  356  
[0m[90m              .......[0m
[90m               |  359          rest = capture_rest = nil
[0m[90m               |  360          patterns = []
[0m[37m   1.1ms     1 |  361          with_temp_variables do |child, matched|
[0m[37m   1.1ms     3 |  362            tokens_until('>', 'any child').each do
[0m[90m               |  363              fail_due_to 'ellipsis must be at the end of <>' if rest
[0m[90m               |  364              token = tokens.shift
[0m[90m              .......[0m
[90m               |  366              when CAPTURED_REST then rest = capture_rest = next_capture
[0m[90m               |  367              when REST          then rest = true
[0m[37m   1.1ms     1 |  368              else patterns << compile_expr(token)
[0m[90m               |  369              end
[0m[90m               |  370            end
[0m[90m               |  371            [rest ? patterns.size..Float::INFINITY : patterns.size,
[0m[37m   0.2ms     2 |  372             ->(range) { ANY_ORDER_TEMPLATE.result(binding) }]
[0m[90m               |  373          end
[0m[90m               |  374        end
[0m[90m              .......[0m
[90m               |  376  
[0m[90m               |  377        def insure_same_captures(enum, what)
[0m[37m   1.7ms   848 |  378          return to_enum __method__, enum, what unless block_given?
[0m[90m               |  379  
[0m[90m               |  380          captures_before = captures_after = nil
[0m[31m 143.8ms   424 |  381          enum.each do
[0m[90m               |  382            captures_before ||= @captures
[0m[90m               |  383            @captures = captures_before
[0m[90m              .......[0m
[90m               |  395          # match, the same variables are used to hold the captures for each
[0m[90m               |  396          # branch)
[0m[37m   1.9ms   212 |  397          enum = tokens_until('}', 'union')
[0m[37m   2.5ms   212 |  398          terms = insure_same_captures(enum, 'branch of {}')
[0m[31m 281.1ms  1493 |  399                  .map { compile_expr }
[0m[90m               |  400  
[0m[37m   0.5ms   212 |  401          "(#{terms.join(' || ')})"
[0m[90m               |  402        end
[0m[90m               |  403  
[0m[90m               |  404        def compile_intersect
[0m[90m               |  405          tokens_until(']', 'intersection')
[0m[37m   1.4ms    34 |  406            .map { compile_expr }
[0m[90m               |  407            .join(' && ')
[0m[90m               |  408        end
[0m[90m               |  409  
[0m[90m               |  410        def compile_capture
[0m[33m  48.4ms   294 |  411          "(#{next_capture} = #{CUR_ELEMENT}; #{compile_expr})"
[0m[90m               |  412        end
[0m[90m               |  413  
[0m[90m               |  414        def compile_negation
[0m[37m   0.6ms    17 |  415          "!(#{compile_expr})"
[0m[90m               |  416        end
[0m[90m               |  417  
[0m[90m               |  418        def compile_ascend
[0m[37m   0.9ms     2 |  419          with_context("#{CUR_NODE} && #{compile_expr}", "#{CUR_NODE}.parent")
[0m[90m               |  420        end
[0m[90m               |  421  
[0m[90m              .......[0m
[90m               |  441  
[0m[90m               |  442        def compile_predicate(predicate)
[0m[37m   0.2ms   179 |  443          if predicate.end_with?('(') # is there an arglist?
[0m[90m               |  444            args = compile_args(tokens)
[0m[90m               |  445            predicate = predicate[0..-2] # drop the trailing (
[0m[90m              .......[0m
[90m               |  464  
[0m[90m               |  465        def compile_nodetype(type)
[0m[37m   1.7ms  1024 |  466          "#{compile_guard_clause} && #{CUR_NODE}.#{type.tr('-', '_')}_type?"
[0m[90m               |  467        end
[0m[90m               |  468  
[0m[90m              .......[0m
[90m               |  498          index = @captures
[0m[90m               |  499          @captures += 1
[0m[37m   0.2ms   177 |  500          "captures[#{index}]"
[0m[90m               |  501        end
[0m[90m               |  502  
[0m[90m              .......[0m
[90m               |  529  
[0m[90m               |  530        def emit_param_list
[0m[37m   1.0ms   543 |  531          (1..@params).map { |n| "param#{n}" }.join(',')
[0m[90m               |  532        end
[0m[90m               |  533  
[0m[90m               |  534        def emit_trailing_params
[0m[37m   1.6ms   177 |  535          params = emit_param_list
[0m[90m               |  536          params.empty? ? '' : ",#{params}"
[0m[90m               |  537        end
[0m[90m              .......[0m
[90m               |  540          <<-RUBY
[0m[90m               |  541            return unless #{@match_code}
[0m[37m   1.0ms   262 |  542            block_given? ? #{emit_yield_capture} : (return #{emit_retval})
[0m[90m               |  543          RUBY
[0m[90m               |  544        end
[0m[90m              .......[0m
[90m               |  549  
[0m[90m               |  550        def with_temp_node(cur_node)
[0m[33m  13.9ms   411 |  551          with_temp_variables do |node|
[0m[90m               |  552            yield "(#{node} = #{cur_node})", node
[0m[90m               |  553          end
[0m[37m   1.2ms   411 |  554            .gsub("\n", "\n  ") # Nicer indent for debugging
[0m[90m               |  555        end
[0m[90m               |  556  
[0m[90m               |  557        def with_temp_variables(&block)
[0m[37m   4.6ms  2063 |  558          names = block.parameters.map { |_, name| "#{name}#{next_temp_value}" }
[0m[90m               |  559          yield(*names)
[0m[90m               |  560        end
[0m[90m              .......[0m
[90m               |  565  
[0m[90m               |  566        def auto_use_temp_node?(code)
[0m[33m   5.2ms  1944 |  567          code.scan(CUR_PLACEHOLDER).count > 1
[0m[90m               |  568        end
[0m[90m               |  569  
[0m[90m              .......[0m
[90m               |  572  
[0m[90m               |  573        def with_child_context(code, child_index)
[0m[33m  27.9ms  1942 |  574          with_context(code, "#{CUR_NODE}.children[#{child_index}]")
[0m[90m               |  575        end
[0m[90m               |  576  
[0m[90m               |  577        def with_context(code, cur_node,
[0m[33m   8.7ms   972 |  578                         use_temp_node: auto_use_temp_node?(code))
[0m[90m               |  579          if use_temp_node
[0m[33m  16.6ms   411 |  580            with_temp_node(cur_node) do |init, temp_var|
[0m[33m   6.5ms   411 |  581              substitute_cur_node(code, temp_var, first_cur_node: init)
[0m[90m               |  582            end
[0m[90m               |  583          else
[0m[33m  10.2ms   724 |  584            substitute_cur_node(code, cur_node)
[0m[90m               |  585          end
[0m[90m               |  586        end
[0m[90m               |  587  
[0m[90m               |  588        def with_seq_head_context(code)
[0m[37m   0.7ms   440 |  589          if code.include?(SEQ_HEAD_GUARD)
[0m[90m               |  590            fail_due_to('parentheses at sequence head')
[0m[90m               |  591          end
[0m[90m               |  592  
[0m[37m   0.9ms   440 |  593          code.gsub CUR_ELEMENT, "#{CUR_NODE}.type"
[0m[90m               |  594        end
[0m[90m               |  595  
[0m[90m              .......[0m
[90m               |  597          iter = 0
[0m[90m               |  598          code
[0m[37m   4.1ms  1135 |  599            .gsub(CUR_ELEMENT, CUR_NODE)
[0m[37m   4.5ms  1135 |  600            .gsub(CUR_NODE) do
[0m[90m               |  601              iter += 1
[0m[90m               |  602              iter == 1 ? first_cur_node : cur_node
[0m[90m               |  603            end
[0m[37m   2.4ms  1135 |  604            .gsub(SEQ_HEAD_GUARD, '')
[0m[90m               |  605        end
[0m[90m               |  606  
[0m[90m               |  607        def self.tokens(pattern)
[0m[31m  62.2ms  5562 |  608          pattern.scan(TOKEN).reject { |token| token =~ /\A#{SEPARATORS}\Z/ }
[0m[90m               |  609        end
[0m[90m               |  610      end
[0m[90m              .......[0m
[90m               |  621        # return the captures, or `true` if there were none.
[0m[90m               |  622        def def_node_matcher(method_name, pattern_str)
[0m[31m 293.6ms   262 |  623          compiler = Compiler.new(pattern_str, 'node')
[0m[90m               |  624          src = "def #{method_name}(node = self" \
[0m[37m   1.5ms   131 |  625                "#{compiler.emit_trailing_params});" \
[0m[37m   1.7ms   131 |  626                "#{compiler.emit_method_code};end"
[0m[90m               |  627  
[0m[37m   0.5ms   262 |  628          location = caller_locations(1, 1).first
[0m[33m  17.0ms   393 |  629          class_eval(src, location.path, location.lineno)
[0m[90m               |  630        end
[0m[90m               |  631  
[0m[90m              .......[0m
[90m               |  637        # yield all descendants which match.
[0m[90m               |  638        def def_node_search(method_name, pattern_str)
[0m[33m  41.9ms    62 |  639          compiler = Compiler.new(pattern_str, 'node')
[0m[37m   0.3ms    93 |  640          called_from = caller(1..1).first.split(':')
[0m[90m               |  641  
[0m[90m               |  642          if method_name.to_s.end_with?('?')
[0m[37m   1.9ms    16 |  643            node_search_first(method_name, compiler, called_from)
[0m[90m               |  644          else
[0m[37m   2.7ms    15 |  645            node_search_all(method_name, compiler, called_from)
[0m[90m               |  646          end
[0m[90m               |  647        end
[0m[90m               |  648  
[0m[90m               |  649        def node_search_first(method_name, compiler, called_from)
[0m[37m   1.8ms    16 |  650          node_search(method_name, compiler, 'return true', '', called_from)
[0m[90m               |  651        end
[0m[90m               |  652  
[0m[90m              .......[0m
[90m               |  656                    "#{compiler.emit_trailing_params}) unless block_given?"
[0m[90m               |  657  
[0m[37m   2.3ms    15 |  658          node_search(method_name, compiler, yield_code, prelude, called_from)
[0m[90m               |  659        end
[0m[90m               |  660  
[0m[90m               |  661        def node_search(method_name, compiler, on_match, prelude, called_from)
[0m[37m   0.6ms    62 |  662          src = node_search_body(method_name, compiler.emit_trailing_params,
[0m[90m               |  663                                 prelude, compiler.match_code, on_match)
[0m[90m               |  664          filename, lineno = *called_from
[0m[37m   3.4ms    62 |  665          class_eval(src, filename, lineno.to_i)
[0m[90m               |  666        end
[0m[90m               |  667  
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/delegate.rb
[90m               |  55    # :stopdoc:
[0m[90m               |  56    def self.const_missing(n)
[0m[37m   2.6ms  2042 |  57      ::Object.const_get(n)
[0m[90m               |  58    end
[0m[90m               |  59    # :startdoc:
[0m[90m              .......[0m
[90m               |  70    #
[0m[90m               |  71    def initialize(obj)
[0m[37m   1.7ms   443 |  72      __setobj__(obj)
[0m[90m               |  73    end
[0m[90m               |  74  
[0m[90m              .......[0m
[90m               |  78    def method_missing(m, *args, &block)
[0m[90m               |  79      r = true
[0m[37m   2.4ms  1854 |  80      target = self.__getobj__ {r = false}
[0m[90m               |  81  
[0m[37m   2.4ms  1854 |  82      if r && target.respond_to?(m)
[0m[33m  47.0ms  1854 |  83        target.__send__(m, *args, &block)
[0m[90m               |  84      elsif ::Kernel.respond_to?(m, true)
[0m[90m               |  85        ::Kernel.instance_method(m).bind(self).(*args, &block)
[0m[90m              .......[0m
[90m               |  339    #
[0m[90m               |  340    def __setobj__(obj)
[0m[37m   0.5ms   443 |  341      __raise__ ::ArgumentError, "cannot delegate to self" if self.equal?(obj)
[0m[90m               |  342      @delegate_sd_obj = obj
[0m[90m               |  343    end
[0m
lib/rubocop/cop/internal_affairs/node_type_predicate.rb
[90m               |  17          MSG = 'Use `#%<type>s_type?` to check node type.'.freeze
[0m[90m               |  18  
[0m[37m   1.8ms     1 |  19          def_node_matcher :node_type_check, <<-PATTERN
[0m[90m               |  20            (send (send $_ :type) :== (sym $_))
[0m[90m               |  21          PATTERN
[0m
lib/rubocop/cop/internal_affairs/offense_location_keyword.rb
[90m               |  34          private
[0m[90m               |  35  
[0m[37m   1.1ms     1 |  36          def_node_matcher :node_type_check, <<-PATTERN
[0m[90m               |  37            (send nil? :add_offense $_node $hash)
[0m[90m               |  38          PATTERN
[0m[90m               |  39  
[0m[37m   2.3ms     1 |  40          def_node_matcher :offending_location_argument, <<-PATTERN
[0m[90m               |  41            (pair (sym :location) $(send (send $_node :loc) $_keyword))
[0m[90m               |  42          PATTERN
[0m
lib/rubocop/cop/internal_affairs/redundant_message_argument.rb
[90m               |  25          MSG = 'Redundant message argument to `#add_offense`.'.freeze
[0m[90m               |  26  
[0m[37m   1.1ms     1 |  27          def_node_matcher :node_type_check, <<-PATTERN
[0m[90m               |  28            (send nil? :add_offense $_node $hash)
[0m[90m               |  29          PATTERN
[0m[90m               |  30  
[0m[37m   2.9ms     1 |  31          def_node_matcher :redundant_message_argument, <<-PATTERN
[0m[90m               |  32            (pair
[0m[90m               |  33              (sym :message)
[0m[90m              .......[0m
[90m               |  35          PATTERN
[0m[90m               |  36  
[0m[37m   0.8ms     1 |  37          def_node_matcher :message_method_call, '(send nil? :message $_node)'
[0m[90m               |  38  
[0m[90m               |  39          def on_send(node)
[0m
lib/rubocop/cop/internal_affairs/redundant_location_argument.rb
[90m               |  22          MSG = 'Redundant location argument to `#add_offense`.'.freeze
[0m[90m               |  23  
[0m[37m   2.9ms     1 |  24          def_node_matcher :redundant_location_argument, <<-PATTERN
[0m[90m               |  25            (send nil? :add_offense _
[0m[90m               |  26              (hash <$(pair (sym :location) (sym :expression)) ...>)
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/erb.rb
[90m               |  899        end.call
[0m[90m               |  900      else
[0m[37m   0.2ms     1 |  901        eval(@src, b, (@filename || '(erb)'), @lineno)
[0m[90m               |  902      end
[0m[90m               |  903    end
[0m
lib/rubocop/cop/internal_affairs/useless_message_assertion.rb
[90m               |  17          MSG = 'Do not specify cop behavior using `described_class::MSG`.'.freeze
[0m[90m               |  18  
[0m[37m   1.2ms     1 |  19          def_node_search :described_class_msg, <<-PATTERN
[0m[90m               |  20            (const (send nil? :described_class) :MSG)
[0m[90m               |  21          PATTERN
[0m[90m               |  22  
[0m[37m   1.5ms     1 |  23          def_node_matcher :rspec_expectation_on_msg?, <<-PATTERN
[0m[90m               |  24            (send (send nil? :expect #contains_described_class_msg?) :to ...)
[0m[90m               |  25          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop-performance.rb
[90m               |   3  require 'rubocop'
[0m[90m               |   4  
[0m[33m  16.9ms     3 |   5  require_relative 'rubocop/performance'
[0m[37m   0.3ms     3 |   6  require_relative 'rubocop/performance/version'
[0m[37m   0.3ms     3 |   7  require_relative 'rubocop/performance/inject'
[0m[90m               |   8  
[0m[31m 545.3ms     1 |   9  RuboCop::Performance::Inject.defaults!
[0m[90m               |  10  
[0m[31m 114.2ms     3 |  11  require_relative 'rubocop/cop/performance_cops'
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/performance.rb
[90m               |   4    # RuboCop Performance project namespace
[0m[90m               |   5    module Performance
[0m[37m   0.3ms    14 |   6      PROJECT_ROOT = Pathname.new(__dir__).parent.parent.expand_path.freeze
[0m[37m   0.3ms     3 |   7      CONFIG_DEFAULT = PROJECT_ROOT.join('config', 'default.yml').freeze
[0m[33m  16.0ms     4 |   8      CONFIG = YAML.safe_load(CONFIG_DEFAULT.read).freeze
[0m[90m               |   9  
[0m[90m               |  10      private_constant(:CONFIG_DEFAULT, :PROJECT_ROOT)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/performance/inject.rb
[90m               |   8        def self.defaults!
[0m[90m               |   9          path = CONFIG_DEFAULT.to_s
[0m[33m  24.6ms     1 |  10          hash = ConfigLoader.send(:load_yaml_configuration, path)
[0m[90m               |  11          config = Config.new(hash, path)
[0m[90m               |  12          puts "configuration from #{path}" if ConfigLoader.debug?
[0m[31m 520.6ms     1 |  13          config = ConfigLoader.merge_with_default(config, path)
[0m[90m               |  14          ConfigLoader.instance_variable_set(:@default_configuration, config)
[0m[90m               |  15        end
[0m
lib/rubocop/config.rb
[90m               |  242  
[0m[90m               |  243      def self.create(hash, path)
[0m[33m  39.3ms     9 |  244        new(hash, path).check
[0m[90m               |  245      end
[0m[90m               |  246  
[0m[90m              .......[0m
[90m               |  249          warn("#{loaded_path} - #{deprecation_message}")
[0m[90m               |  250        end
[0m[33m  31.1ms     3 |  251        validate
[0m[33m   8.1ms     3 |  252        make_excludes_absolute
[0m[90m               |  253        self
[0m[90m               |  254      end
[0m[90m              .......[0m
[90m               |  271  
[0m[90m               |  272      def key?(key)
[0m[37m   1.0ms   667 |  273        @hash.key?(key)
[0m[90m               |  274      end
[0m[90m               |  275  
[0m[90m              .......[0m
[90m               |  279  
[0m[90m               |  280      def each_key(&block)
[0m[33m   8.1ms     3 |  281        @hash.each_key(&block)
[0m[90m               |  282      end
[0m[90m               |  283  
[0m[90m              .......[0m
[90m               |  299  
[0m[90m               |  300      def to_s
[0m[33m  21.0ms  6560 |  301        @to_s ||= @hash.to_s
[0m[90m               |  302      end
[0m[90m               |  303  
[0m[90m               |  304      def signature
[0m[33m  21.2ms     9 |  305        @signature ||= Digest::SHA1.hexdigest(to_s)
[0m[90m               |  306      end
[0m[90m               |  307  
[0m[90m               |  308      def make_excludes_absolute
[0m[33m   8.1ms     3 |  309        each_key do |key|
[0m[33m   5.2ms   463 |  310          validate_section_presence(key)
[0m[37m   0.6ms   463 |  311          next unless self[key]['Exclude']
[0m[90m               |  312  
[0m[37m   0.9ms    44 |  313          self[key]['Exclude'].map! do |exclude_elem|
[0m[90m               |  314            if exclude_elem.is_a?(String) && !absolute?(exclude_elem)
[0m[37m   0.4ms   126 |  315              File.expand_path(File.join(base_dir_for_path_parameters,
[0m[90m               |  316                                         exclude_elem))
[0m[90m               |  317            else
[0m[90m              .......[0m
[90m               |  359        return if File.expand_path(loaded_path).start_with?(base_config_path)
[0m[90m               |  360  
[0m[37m   0.3ms     6 |  361        valid_cop_names, invalid_cop_names = keys.partition do |key|
[0m[90m               |  362          ConfigLoader.default_configuration.key?(key)
[0m[90m               |  363        end
[0m[90m               |  364  
[0m[37m   1.9ms     2 |  365        reject_obsolete_cops_and_parameters
[0m[33m  26.9ms     2 |  366        warn_about_unrecognized_cops(invalid_cop_names)
[0m[37m   0.4ms     2 |  367        check_target_ruby
[0m[37m   1.0ms     2 |  368        validate_parameter_names(valid_cop_names)
[0m[37m   0.5ms     2 |  369        validate_enforced_styles(valid_cop_names)
[0m[90m               |  370        validate_syntax_cop
[0m[90m               |  371        reject_mutually_exclusive_defaults
[0m[90m              .......[0m
[90m               |  456  
[0m[90m               |  457            for_all_cops['TargetRubyVersion'].to_f
[0m[37m   0.3ms     1 |  458          elsif target_ruby_version_from_version_file
[0m[90m               |  459            @target_ruby_version_source = :ruby_version_file
[0m[90m               |  460  
[0m[90m              .......[0m
[90m               |  484  
[0m[90m               |  485      def warn_about_unrecognized_cops(invalid_cop_names)
[0m[33m  26.9ms     2 |  486        invalid_cop_names.each do |name|
[0m[90m               |  487          # There could be a custom cop with this name. If so, don't warn
[0m[33m  26.9ms     2 |  488          next if Cop::Cop.registry.contains_cop_matching?([name])
[0m[90m               |  489  
[0m[90m               |  490          # Special case for inherit_mode, which is a directive that we keep in
[0m[90m              .......[0m
[90m               |  511  
[0m[90m               |  512      def validate_section_presence(name)
[0m[37m   3.2ms  1500 |  513        return unless key?(name) && self[name].nil?
[0m[90m               |  514  
[0m[90m               |  515        raise ValidationError,
[0m[90m              .......[0m
[90m               |  518  
[0m[90m               |  519      def validate_parameter_names(valid_cop_names)
[0m[37m   1.0ms     2 |  520        valid_cop_names.each do |name|
[0m[37m   0.4ms    37 |  521          validate_section_presence(name)
[0m[90m               |  522          default_config = ConfigLoader.default_configuration[name]
[0m[90m               |  523  
[0m[37m   0.3ms    74 |  524          self[name].each_key do |param|
[0m[90m               |  525            next if COMMON_PARAMS.include?(param) || default_config.key?(param)
[0m[90m               |  526  
[0m[90m              .......[0m
[90m               |  536  
[0m[90m               |  537      def validate_enforced_styles(valid_cop_names)
[0m[37m   0.5ms     2 |  538        valid_cop_names.each do |name|
[0m[90m               |  539          styles = self[name].select { |key, _| key.start_with?('Enforced') }
[0m[90m               |  540  
[0m[90m               |  541          styles.each do |style_name, style|
[0m[90m              .......[0m
[90m               |  555      def reject_obsolete_cops_and_parameters
[0m[90m               |  556        messages = [
[0m[37m   1.7ms     2 |  557          obsolete_cops,
[0m[90m               |  558          obsolete_parameters
[0m[90m               |  559        ].flatten.compact
[0m[90m              .......[0m
[90m               |  579  
[0m[90m               |  580      def obsolete_cops
[0m[37m   1.7ms     4 |  581        OBSOLETE_COPS.map do |cop_name, message|
[0m[37m   1.4ms   192 |  582          next unless key?(cop_name) || key?(Cop::Badge.parse(cop_name).cop_name)
[0m[90m               |  583  
[0m[90m               |  584          message + "\n(obsolete configuration found in #{smart_loaded_path}," \
[0m[90m              .......[0m
[90m               |  588  
[0m[90m               |  589      def check_target_ruby
[0m[37m   0.4ms     4 |  590        return if KNOWN_RUBIES.include?(target_ruby_version)
[0m[90m               |  591  
[0m[90m               |  592        msg = if OBSOLETE_RUBIES.include?(target_ruby_version)
[0m[90m              .......[0m
[90m               |  618      def ruby_version_file
[0m[90m               |  619        @ruby_version_file ||=
[0m[37m   0.2ms     2 |  620          find_file_upwards(RUBY_VERSION_FILENAME, base_dir_for_path_parameters)
[0m[90m               |  621      end
[0m[90m               |  622  
[0m[90m               |  623      def target_ruby_version_from_version_file
[0m[37m   0.3ms     2 |  624        file = ruby_version_file
[0m[90m               |  625        return unless file && File.file?(file)
[0m[90m               |  626  
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance_cops.rb
[90m               |   9  end
[0m[90m               |  10  
[0m[37m   3.7ms     3 |  11  require_relative 'performance/caller'
[0m[37m   0.8ms     3 |  12  require_relative 'performance/case_when_splat'
[0m[33m   9.9ms     3 |  13  require_relative 'performance/casecmp'
[0m[33m   6.6ms     3 |  14  require_relative 'performance/compare_with_block'
[0m[37m   4.6ms     3 |  15  require_relative 'performance/count'
[0m[37m   4.9ms     3 |  16  require_relative 'performance/detect'
[0m[33m   5.3ms     3 |  17  require_relative 'performance/double_start_end_with'
[0m[37m   4.7ms     3 |  18  require_relative 'performance/end_with'
[0m[37m   1.8ms     3 |  19  require_relative 'performance/fixed_size'
[0m[37m   3.0ms     3 |  20  require_relative 'performance/flat_map'
[0m[37m   2.1ms     3 |  21  require_relative 'performance/inefficient_hash_search'
[0m[37m   1.9ms     3 |  22  require_relative 'performance/open_struct'
[0m[37m   2.0ms     3 |  23  require_relative 'performance/range_include'
[0m[33m   6.2ms     3 |  24  require_relative 'performance/redundant_block_call'
[0m[37m   3.8ms     3 |  25  require_relative 'performance/redundant_match'
[0m[37m   4.9ms     3 |  26  require_relative 'performance/redundant_merge'
[0m[33m  14.9ms     3 |  27  require_relative 'performance/regexp_match'
[0m[37m   1.7ms     3 |  28  require_relative 'performance/reverse_each'
[0m[37m   0.5ms     3 |  29  require_relative 'performance/size'
[0m[37m   4.7ms     3 |  30  require_relative 'performance/start_with'
[0m[37m   3.4ms     3 |  31  require_relative 'performance/string_replacement'
[0m[37m   4.6ms     3 |  32  require_relative 'performance/times_map'
[0m[37m   3.7ms     3 |  33  require_relative 'performance/unfreeze_string'
[0m[37m   2.2ms     3 |  34  require_relative 'performance/uri_default_parser'
[0m[33m  11.9ms     3 |  35  require_relative 'performance/chain_array_allocation'
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/caller.rb
[90m               |  25                      ' instead of `%<method>s.first`.'.freeze
[0m[90m               |  26  
[0m[37m   1.8ms     1 |  27          def_node_matcher :slow_caller?, <<-PATTERN
[0m[90m               |  28            {
[0m[90m               |  29              (send nil? {:caller :caller_locations})
[0m[90m              .......[0m
[90m               |  32          PATTERN
[0m[90m               |  33  
[0m[37m   1.4ms     1 |  34          def_node_matcher :caller_with_scope_method?, <<-PATTERN
[0m[90m               |  35            {
[0m[90m               |  36              (send #slow_caller? :first)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/casecmp.rb
[90m               |  22          CASE_METHODS = %i[downcase upcase].freeze
[0m[90m               |  23  
[0m[37m   3.3ms     1 |  24          def_node_matcher :downcase_eq, <<-PATTERN
[0m[90m               |  25            (send
[0m[90m               |  26              $(send _ ${:downcase :upcase})
[0m[90m              .......[0m
[90m               |  29          PATTERN
[0m[90m               |  30  
[0m[37m   3.6ms     1 |  31          def_node_matcher :eq_downcase, <<-PATTERN
[0m[90m               |  32            (send
[0m[90m               |  33              {str (send _ {:downcase :upcase} ...) (begin str)}
[0m[90m              .......[0m
[90m               |  36          PATTERN
[0m[90m               |  37  
[0m[37m   2.5ms     1 |  38          def_node_matcher :downcase_downcase, <<-PATTERN
[0m[90m               |  39            (send
[0m[90m               |  40              $(send _ ${:downcase :upcase})
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/compare_with_block.rb
[90m               |  31                '<=> %<str_b>s }`.'.freeze
[0m[90m               |  32  
[0m[37m   3.0ms     1 |  33          def_node_matcher :compare?, <<-PATTERN
[0m[90m               |  34            (block
[0m[90m               |  35              $(send _ {:sort :min :max})
[0m[90m              .......[0m
[90m               |  38          PATTERN
[0m[90m               |  39  
[0m[37m   2.9ms     1 |  40          def_node_matcher :replaceable_body?, <<-PATTERN
[0m[90m               |  41            (send
[0m[90m               |  42              (send (lvar %1) $_method $...)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/count.rb
[90m               |  44          MSG = 'Use `count` instead of `%<selector>s...%<counter>s`.'.freeze
[0m[90m               |  45  
[0m[37m   4.1ms     1 |  46          def_node_matcher :count_candidate?, <<-PATTERN
[0m[90m               |  47            {
[0m[90m               |  48              (send (block $(send _ ${:select :reject}) ...) ${:count :length :size})
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/detect.rb
[90m               |  31                        '`%<first_method>s.%<second_method>s`.'.freeze
[0m[90m               |  32  
[0m[37m   4.3ms     1 |  33          def_node_matcher :detect_candidate?, <<-PATTERN
[0m[90m               |  34            {
[0m[90m               |  35              (send $(block (send _ {:select :find_all}) ...) ${:first :last} $...)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/double_start_end_with.rb
[90m               |  76          end
[0m[90m               |  77  
[0m[37m   2.3ms     1 |  78          def_node_matcher :two_start_end_with_calls, <<-PATTERN
[0m[90m               |  79            (or
[0m[90m               |  80              (send $_recv [{:start_with? :end_with?} $_method] $...)
[0m[90m              .......[0m
[90m               |  82          PATTERN
[0m[90m               |  83  
[0m[37m   2.4ms     1 |  84          def_node_matcher :check_with_active_support_aliases, <<-PATTERN
[0m[90m               |  85            (or
[0m[90m               |  86              (send $_recv
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/end_with.rb
[90m               |  20          SINGLE_QUOTE = "'".freeze
[0m[90m               |  21  
[0m[37m   4.3ms     1 |  22          def_node_matcher :redundant_regex?, <<-PATTERN
[0m[90m               |  23            {(send $!nil? {:match :=~ :match?} (regexp (str $#literal_at_end?) (regopt)))
[0m[90m               |  24             (send (regexp (str $#literal_at_end?) (regopt)) {:match :=~} $_)}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/fixed_size.rb
[90m               |  49          MSG = 'Do not compute the size of statically sized objects.'.freeze
[0m[90m               |  50  
[0m[37m   1.4ms     1 |  51          def_node_matcher :counter, <<-MATCHER
[0m[90m               |  52            (send ${array hash str sym} {:count :length :size} $...)
[0m[90m               |  53          MATCHER
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/flat_map.rb
[90m               |  23                                    'multiple levels.'.freeze
[0m[90m               |  24  
[0m[37m   2.4ms     1 |  25          def_node_matcher :flat_map_candidate?, <<-PATTERN
[0m[90m               |  26            (send (block $(send _ ${:collect :map}) ...) ${:flatten :flatten!} $...)
[0m[90m               |  27          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/inefficient_hash_search.rb
[90m               |  38        #
[0m[90m               |  39        class InefficientHashSearch < Cop
[0m[37m   1.5ms     1 |  40          def_node_matcher :inefficient_include?, <<-PATTERN
[0m[90m               |  41            (send (send $_ {:keys :values}) :include? _)
[0m[90m               |  42          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/open_struct.rb
[90m               |  32                'to optimize the performance.'.freeze
[0m[90m               |  33  
[0m[37m   1.5ms     1 |  34          def_node_matcher :open_struct, <<-PATTERN
[0m[90m               |  35            (send (const {nil? cbase} :OpenStruct) :new ...)
[0m[90m               |  36          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/range_include.rb
[90m               |  32          # (We don't even catch it if the Range is in double parens)
[0m[90m               |  33  
[0m[37m   1.7ms     1 |  34          def_node_matcher :range_include, <<-PATTERN
[0m[90m               |  35            (send {irange erange (begin {irange erange})} :include? ...)
[0m[90m               |  36          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/redundant_block_call.rb
[90m               |  30          SPACE = ' '.freeze
[0m[90m               |  31  
[0m[37m   3.6ms     1 |  32          def_node_matcher :blockarg_def, <<-PATTERN
[0m[90m               |  33            {(def  _   (args ... (blockarg $_)) $_)
[0m[90m               |  34             (defs _ _ (args ... (blockarg $_)) $_)}
[0m[90m               |  35          PATTERN
[0m[90m               |  36  
[0m[37m   1.3ms     1 |  37          def_node_search :blockarg_calls, <<-PATTERN
[0m[90m               |  38            (send (lvar %1) :call ...)
[0m[90m               |  39          PATTERN
[0m[90m               |  40  
[0m[37m   0.7ms     1 |  41          def_node_search :blockarg_assigned?, <<-PATTERN
[0m[90m               |  42            (lvasgn %1 ...)
[0m[90m               |  43          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/redundant_match.rb
[90m               |  24          # 'match' is a fairly generic name, so we don't flag it unless we see
[0m[90m               |  25          # a string or regexp literal on one side or the other
[0m[37m   1.9ms     1 |  26          def_node_matcher :match_call?, <<-PATTERN
[0m[90m               |  27            {(send {str regexp} :match _)
[0m[90m               |  28             (send !nil? :match {str regexp})}
[0m[90m               |  29          PATTERN
[0m[90m               |  30  
[0m[37m   1.5ms     1 |  31          def_node_matcher :only_truthiness_matters?, <<-PATTERN
[0m[90m               |  32            ^({if while until case while_post until_post} equal?(%0) ...)
[0m[90m               |  33          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/redundant_merge.rb
[90m               |  21          RUBY
[0m[90m               |  22  
[0m[37m   1.4ms     1 |  23          def_node_matcher :redundant_merge_candidate, <<-PATTERN
[0m[90m               |  24            (send $!nil? :merge! [(hash $...) !kwsplat_type?])
[0m[90m               |  25          PATTERN
[0m[90m               |  26  
[0m[37m   0.5ms     1 |  27          def_node_matcher :modifier_flow_control?, <<-PATTERN
[0m[90m               |  28            [{if while until} modifier_form?]
[0m[90m               |  29          PATTERN
[0m[90m              .......[0m
[90m               |  174            end
[0m[90m               |  175  
[0m[37m   1.9ms     1 |  176            def_node_matcher :each_with_object_node, <<-PATTERN
[0m[90m               |  177              (block (send _ :each_with_object _) (args _ $_) ...)
[0m[90m               |  178            PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/regexp_match.rb
[90m               |  85            'is not used.'.freeze
[0m[90m               |  86  
[0m[37m   2.0ms     1 |  87          def_node_matcher :match_method?, <<-PATTERN
[0m[90m               |  88            {
[0m[90m               |  89              (send _recv :match _)
[0m[90m              .......[0m
[90m               |  92          PATTERN
[0m[90m               |  93  
[0m[37m   1.0ms     1 |  94          def_node_matcher :match_operator?, <<-PATTERN
[0m[90m               |  95            (send !nil? {:=~ :!~} !nil?)
[0m[90m               |  96          PATTERN
[0m[90m               |  97  
[0m[33m   6.7ms     1 |  98          def_node_matcher :match_threequals?, <<-PATTERN
[0m[90m               |  99            (send (regexp (str _) {(regopt) (regopt _)}) :=== !nil?)
[0m[90m               |  100          PATTERN
[0m[90m              .......[0m
[90m               |  116          PATTERN
[0m[90m               |  117  
[0m[37m   0.5ms     1 |  118          def_node_matcher :match_node?, MATCH_NODE_PATTERN
[0m[37m   0.5ms     1 |  119          def_node_search :search_match_nodes, MATCH_NODE_PATTERN
[0m[90m               |  120  
[0m[37m   3.4ms     1 |  121          def_node_search :last_matches, <<-PATTERN
[0m[90m               |  122            {
[0m[90m               |  123              (send (const nil? :Regexp) :last_match)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/reverse_each.rb
[90m               |  19          UNDERSCORE = '_'.freeze
[0m[90m               |  20  
[0m[37m   1.2ms     1 |  21          def_node_matcher :reverse_each?, <<-MATCHER
[0m[90m               |  22            (send $(send _ :reverse) :each)
[0m[90m               |  23          MATCHER
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/start_with.rb
[90m               |  20          SINGLE_QUOTE = "'".freeze
[0m[90m               |  21  
[0m[37m   4.2ms     1 |  22          def_node_matcher :redundant_regex?, <<-PATTERN
[0m[90m               |  23            {(send $!nil? {:match :=~ :match?} (regexp (str $#literal_at_start?) (regopt)))
[0m[90m               |  24             (send (regexp (str $#literal_at_start?) (regopt)) {:match :=~} $_)}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/string_replacement.rb
[90m               |  29          SINGLE_QUOTE = "'".freeze
[0m[90m               |  30  
[0m[37m   2.6ms     1 |  31          def_node_matcher :string_replacement?, <<-PATTERN
[0m[90m               |  32            (send _ {:gsub :gsub!}
[0m[90m               |  33                      ${regexp str (send (const nil? :Regexp) {:new :compile} _)}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/times_map.rb
[90m               |  62          end
[0m[90m               |  63  
[0m[37m   4.1ms     1 |  64          def_node_matcher :times_map_call, <<-PATTERN
[0m[90m               |  65            {(block $(send (send $!nil? :times) {:map :collect}) ...)
[0m[90m               |  66             $(send (send $!nil? :times) {:map :collect} (block_pass ...))}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/unfreeze_string.rb
[90m               |  31          MSG = 'Use unary plus to get an unfrozen string literal.'.freeze
[0m[90m               |  32  
[0m[37m   0.8ms     1 |  33          def_node_matcher :dup_string?, <<-PATTERN
[0m[90m               |  34            (send {str dstr} :dup)
[0m[90m               |  35          PATTERN
[0m[90m               |  36  
[0m[37m   2.5ms     1 |  37          def_node_matcher :string_new?, <<-PATTERN
[0m[90m               |  38            {
[0m[90m               |  39              (send (const nil? :String) :new {str dstr})
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/uri_default_parser.rb
[90m               |  18                '`%<double_colon>sURI::Parser.new`.'.freeze
[0m[90m               |  19  
[0m[37m   1.8ms     1 |  20          def_node_matcher :uri_parser_new?, <<-PATTERN
[0m[90m               |  21            (send
[0m[90m               |  22              (const
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-performance-1.1.0/lib/rubocop/cop/performance/chain_array_allocation.rb
[90m               |  52                '`%<method>s...%<second_method>s`.'.freeze
[0m[90m               |  53  
[0m[33m  11.5ms     1 |  54          def_node_matcher :flat_map_candidate?, <<-PATTERN
[0m[90m               |  55            {
[0m[90m               |  56              (send (send _ ${#{RETURN_NEW_ARRAY_WHEN_ARGS}} {int lvar ivar cvar gvar}) ${#{HAS_MUTATION_ALTERNATIVE}} $...)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop-rspec.rb
[37m   0.4ms     1 |   1  require 'pathname'
[0m[90m               |   2  require 'yaml'
[0m[90m               |   3  
[0m[90m               |   4  require 'rubocop'
[0m[90m               |   5  
[0m[33m  48.6ms     3 |   6  require_relative 'rubocop/rspec'
[0m[37m   0.3ms     3 |   7  require_relative 'rubocop/rspec/version'
[0m[37m   0.3ms     3 |   8  require_relative 'rubocop/rspec/inject'
[0m[37m   0.2ms     3 |   9  require_relative 'rubocop/rspec/node'
[0m[37m   3.8ms     3 |  10  require_relative 'rubocop/rspec/top_level_describe'
[0m[37m   1.2ms     3 |  11  require_relative 'rubocop/rspec/wording'
[0m[37m   0.3ms     3 |  12  require_relative 'rubocop/rspec/util'
[0m[37m   1.4ms     3 |  13  require_relative 'rubocop/rspec/language'
[0m[33m  22.1ms     3 |  14  require_relative 'rubocop/rspec/language/node_pattern'
[0m[37m   1.1ms     3 |  15  require_relative 'rubocop/rspec/concept'
[0m[33m   9.9ms     3 |  16  require_relative 'rubocop/rspec/example_group'
[0m[37m   3.3ms     3 |  17  require_relative 'rubocop/rspec/example'
[0m[37m   0.4ms     3 |  18  require_relative 'rubocop/rspec/hook'
[0m[37m   0.6ms     3 |  19  require_relative 'rubocop/cop/rspec/cop'
[0m[37m   0.4ms     3 |  20  require_relative 'rubocop/rspec/align_let_brace'
[0m[37m   0.2ms     3 |  21  require_relative 'rubocop/rspec/final_end_location'
[0m[37m   0.4ms     3 |  22  require_relative 'rubocop/rspec/blank_line_separation'
[0m[90m               |  23  
[0m[31m  64.4ms     1 |  24  RuboCop::RSpec::Inject.defaults!
[0m[90m               |  25  
[0m[31m 248.0ms     3 |  26  require_relative 'rubocop/cop/rspec_cops'
[0m[90m               |  27  
[0m[90m               |  28  # We have to register our autocorrect incompatibilies in RuboCop's cops as well
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec.rb
[90m               |   2    # RuboCop RSpec project namespace
[0m[90m               |   3    module RSpec
[0m[37m   0.3ms    14 |   4      PROJECT_ROOT   = Pathname.new(__dir__).parent.parent.expand_path.freeze
[0m[37m   0.3ms     3 |   5      CONFIG_DEFAULT = PROJECT_ROOT.join('config', 'default.yml').freeze
[0m[33m  47.8ms     4 |   6      CONFIG         = YAML.safe_load(CONFIG_DEFAULT.read).freeze
[0m[90m               |   7  
[0m[90m               |   8      private_constant(:CONFIG_DEFAULT, :PROJECT_ROOT)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec/inject.rb
[90m               |   6        def self.defaults!
[0m[90m               |   7          path = CONFIG_DEFAULT.to_s
[0m[31m  64.0ms     1 |   8          hash = ConfigLoader.send(:load_yaml_configuration, path)
[0m[90m               |   9          config = Config.new(hash, path)
[0m[90m               |  10          puts "configuration from #{path}" if ConfigLoader.debug?
[0m[37m   0.3ms     1 |  11          config = ConfigLoader.merge_with_default(config, path)
[0m[90m               |  12          ConfigLoader.instance_variable_set(:@default_configuration, config)
[0m[90m               |  13        end
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec/top_level_describe.rb
[90m               |   5        extend NodePattern::Macros
[0m[90m               |   6  
[0m[37m   2.8ms     1 |   7        def_node_matcher :described_constant, <<-PATTERN
[0m[90m               |   8          (block $(send _ :describe $(const ...)) (args) $_)
[0m[90m               |   9        PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec/language.rb
[90m               |  24  
[0m[90m               |  25          def block_pattern
[0m[37m   0.9ms    18 |  26            "(block #{send_pattern} ...)"
[0m[90m               |  27          end
[0m[90m               |  28  
[0m[90m               |  29          def send_pattern
[0m[37m   1.2ms    28 |  30            "(send {(const nil? :RSpec) nil?} #{node_pattern_union} ...)"
[0m[90m               |  31          end
[0m[90m               |  32  
[0m[90m               |  33          def node_pattern_union
[0m[37m   1.2ms    31 |  34            "{#{node_pattern}}"
[0m[90m               |  35          end
[0m[90m               |  36  
[0m[90m               |  37          def node_pattern
[0m[37m   1.1ms   401 |  38            selectors.map(&:inspect).join(' ')
[0m[90m               |  39          end
[0m[90m               |  40  
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec/language/node_pattern.rb
[90m               |   8          extend RuboCop::NodePattern::Macros
[0m[90m               |   9  
[0m[37m   3.0ms     2 |  10          def_node_matcher :example_group?, ExampleGroups::ALL.block_pattern
[0m[90m               |  11  
[0m[37m   4.6ms     1 |  12          def_node_matcher :example_group_with_body?, <<-PATTERN
[0m[90m               |  13            (block #{ExampleGroups::ALL.send_pattern} args [!nil?])
[0m[90m               |  14          PATTERN
[0m[90m               |  15  
[0m[37m   4.2ms     2 |  16          def_node_matcher :example?, Examples::ALL.block_pattern
[0m[90m               |  17  
[0m[37m   3.4ms     2 |  18          def_node_matcher :hook?, Hooks::ALL.block_pattern
[0m[90m               |  19  
[0m[37m   2.9ms     2 |  20          def_node_matcher :let?, Helpers::ALL.block_pattern
[0m[90m               |  21  
[0m[37m   3.1ms     2 |  22          def_node_matcher :subject?, Subject::ALL.block_pattern
[0m[90m               |  23        end
[0m[90m               |  24      end
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec/example_group.rb
[90m               |  11        #   Selectors which indicate that we should stop searching
[0m[90m               |  12        #
[0m[33m   9.2ms     1 |  13        def_node_matcher :scope_change?, (
[0m[90m               |  14          ExampleGroups::ALL + SharedGroups::ALL + Includes::ALL
[0m[90m               |  15        ).block_pattern
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/rspec/example.rb
[90m               |   5      # Wrapper for RSpec examples
[0m[90m               |   6      class Example < Concept
[0m[37m   1.1ms     1 |   7        def_node_matcher :extract_doc_string,     '(send _ _ $str ...)'
[0m[37m   1.0ms     1 |   8        def_node_matcher :extract_metadata,       '(send _ _ _ $...)'
[0m[37m   0.9ms     1 |   9        def_node_matcher :extract_implementation, '(block send args $_)'
[0m[90m               |  10  
[0m[90m               |  11        def doc_string
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/cop.rb
[90m               |  52          # Invoke the original inherited hook so our cops are recognized
[0m[90m               |  53          def self.inherited(subclass)
[0m[33m   5.6ms    71 |  54            RuboCop::Cop::Cop.inherited(subclass)
[0m[90m               |  55          end
[0m[90m               |  56  
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec_cops.rb
[33m   7.6ms     3 |   1  require_relative 'rspec/capybara/current_path_expectation'
[0m[33m   5.1ms     3 |   2  require_relative 'rspec/capybara/feature_methods'
[0m[90m               |   3  
[0m[37m   4.2ms     3 |   4  require_relative 'rspec/factory_bot/attribute_defined_statically'
[0m[33m   7.7ms     3 |   5  require_relative 'rspec/factory_bot/create_list'
[0m[90m               |   6  
[0m[90m               |   7  begin
[0m[37m   1.9ms     3 |   8    require_relative 'rspec/rails/http_status'
[0m[90m               |   9  rescue LoadError # rubocop:disable Lint/HandleExceptions
[0m[90m               |  10    # Rails/HttpStatus cannot be loaded if rack/utils is unavailable.
[0m[90m               |  11  end
[0m[90m               |  12  
[0m[37m   0.4ms     3 |  13  require_relative 'rspec/align_left_let_brace'
[0m[37m   0.4ms     3 |  14  require_relative 'rspec/align_right_let_brace'
[0m[37m   1.4ms     3 |  15  require_relative 'rspec/any_instance'
[0m[33m   5.2ms     3 |  16  require_relative 'rspec/around_block'
[0m[37m   1.8ms     3 |  17  require_relative 'rspec/be'
[0m[37m   2.4ms     3 |  18  require_relative 'rspec/be_eql'
[0m[37m   1.9ms     3 |  19  require_relative 'rspec/before_after_all'
[0m[37m   2.3ms     3 |  20  require_relative 'rspec/context_wording'
[0m[33m   9.4ms     3 |  21  require_relative 'rspec/describe_class'
[0m[37m   0.4ms     3 |  22  require_relative 'rspec/describe_method'
[0m[37m   2.1ms     3 |  23  require_relative 'rspec/describe_symbol'
[0m[33m   7.6ms     3 |  24  require_relative 'rspec/described_class'
[0m[37m   3.9ms     3 |  25  require_relative 'rspec/empty_example_group'
[0m[37m   0.4ms     3 |  26  require_relative 'rspec/empty_line_after_example_group'
[0m[37m   0.4ms     3 |  27  require_relative 'rspec/empty_line_after_final_let'
[0m[37m   0.4ms     3 |  28  require_relative 'rspec/empty_line_after_hook'
[0m[37m   0.4ms     3 |  29  require_relative 'rspec/empty_line_after_subject'
[0m[37m   0.4ms     3 |  30  require_relative 'rspec/example_length'
[0m[37m   1.7ms     3 |  31  require_relative 'rspec/example_without_description'
[0m[37m   2.5ms     3 |  32  require_relative 'rspec/example_wording'
[0m[37m   1.3ms     3 |  33  require_relative 'rspec/expect_actual'
[0m[33m   5.4ms     3 |  34  require_relative 'rspec/expect_change'
[0m[37m   2.1ms     3 |  35  require_relative 'rspec/expect_in_hook'
[0m[37m   0.4ms     3 |  36  require_relative 'rspec/expect_output'
[0m[37m   3.7ms     3 |  37  require_relative 'rspec/file_path'
[0m[33m   8.6ms     3 |  38  require_relative 'rspec/focus'
[0m[37m   4.9ms     3 |  39  require_relative 'rspec/hook_argument'
[0m[33m   6.1ms     3 |  40  require_relative 'rspec/hooks_before_examples'
[0m[37m   3.3ms     3 |  41  require_relative 'rspec/implicit_expect'
[0m[37m   1.5ms     3 |  42  require_relative 'rspec/implicit_subject'
[0m[33m   5.3ms     3 |  43  require_relative 'rspec/instance_spy'
[0m[33m   6.8ms     3 |  44  require_relative 'rspec/instance_variable'
[0m[37m   2.7ms     3 |  45  require_relative 'rspec/invalid_predicate_matcher'
[0m[37m   1.3ms     3 |  46  require_relative 'rspec/it_behaves_like'
[0m[37m   4.6ms     3 |  47  require_relative 'rspec/iterated_expectation'
[0m[37m   0.5ms     3 |  48  require_relative 'rspec/leading_subject'
[0m[33m   6.2ms     3 |  49  require_relative 'rspec/let_before_examples'
[0m[37m   3.7ms     3 |  50  require_relative 'rspec/let_setup'
[0m[37m   1.5ms     3 |  51  require_relative 'rspec/message_chain'
[0m[37m   3.1ms     3 |  52  require_relative 'rspec/message_expectation'
[0m[37m   3.7ms     3 |  53  require_relative 'rspec/message_spies'
[0m[37m   0.4ms     3 |  54  require_relative 'rspec/missing_example_group_argument'
[0m[37m   0.4ms     3 |  55  require_relative 'rspec/multiple_describes'
[0m[33m   5.8ms     3 |  56  require_relative 'rspec/multiple_expectations'
[0m[37m   0.6ms     3 |  57  require_relative 'rspec/multiple_subjects'
[0m[33m   9.6ms     3 |  58  require_relative 'rspec/named_subject'
[0m[37m   3.5ms     3 |  59  require_relative 'rspec/nested_groups'
[0m[37m   1.4ms     3 |  60  require_relative 'rspec/not_to_not'
[0m[33m  12.2ms     3 |  61  require_relative 'rspec/overwriting_setup'
[0m[33m   7.3ms     3 |  62  require_relative 'rspec/pending'
[0m[33m  14.3ms     3 |  63  require_relative 'rspec/predicate_matcher'
[0m[37m   3.4ms     3 |  64  require_relative 'rspec/receive_counts'
[0m[37m   1.2ms     3 |  65  require_relative 'rspec/receive_never'
[0m[37m   0.4ms     3 |  66  require_relative 'rspec/repeated_description'
[0m[37m   0.4ms     3 |  67  require_relative 'rspec/repeated_example'
[0m[37m   3.2ms     3 |  68  require_relative 'rspec/return_from_stub'
[0m[37m   0.4ms     3 |  69  require_relative 'rspec/scattered_let'
[0m[37m   0.4ms     3 |  70  require_relative 'rspec/scattered_setup'
[0m[33m   9.6ms     3 |  71  require_relative 'rspec/shared_context'
[0m[37m   2.8ms     3 |  72  require_relative 'rspec/shared_examples'
[0m[37m   2.1ms     3 |  73  require_relative 'rspec/single_argument_message_chain'
[0m[33m   8.4ms     3 |  74  require_relative 'rspec/subject_stub'
[0m[37m   3.3ms     3 |  75  require_relative 'rspec/unspecified_exception'
[0m[37m   1.5ms     3 |  76  require_relative 'rspec/verified_doubles'
[0m[37m   2.2ms     3 |  77  require_relative 'rspec/void_expect'
[0m[37m   3.6ms     3 |  78  require_relative 'rspec/yield'
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/capybara/current_path_expectation.rb
[90m               |  27                  '`have_current_path` matcher on `page`'.freeze
[0m[90m               |  28  
[0m[37m   1.9ms     1 |  29            def_node_matcher :expectation_set_on_current_path, <<-PATTERN
[0m[90m               |  30              (send nil? :expect (send {(send nil? :page) nil?} :current_path))
[0m[90m               |  31            PATTERN
[0m[90m               |  32  
[0m[90m               |  33            # Supported matchers: eq(...) / match(/regexp/) / match('regexp')
[0m[37m   3.0ms     1 |  34            def_node_matcher :as_is_matcher, <<-PATTERN
[0m[90m               |  35              (send
[0m[90m               |  36                #expectation_set_on_current_path ${:to :not_to :to_not}
[0m[90m              .......[0m
[90m               |  38            PATTERN
[0m[90m               |  39  
[0m[37m   2.1ms     1 |  40            def_node_matcher :regexp_str_matcher, <<-PATTERN
[0m[90m               |  41              (send
[0m[90m               |  42                #expectation_set_on_current_path ${:to :not_to :to_not}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/capybara/feature_methods.rb
[90m               |  54            }.freeze
[0m[90m               |  55  
[0m[37m   2.1ms     1 |  56            def_node_matcher :spec?, <<-PATTERN
[0m[90m               |  57              (block
[0m[90m               |  58                (send {(const nil? :RSpec) nil?} {:describe :feature} ...)
[0m[90m              .......[0m
[90m               |  60            PATTERN
[0m[90m               |  61  
[0m[37m   2.4ms     1 |  62            def_node_matcher :feature_method, <<-PATTERN
[0m[90m               |  63              (block
[0m[90m               |  64                $(send {(const nil? :RSpec) nil?} ${#{MAP.keys.map(&:inspect).join(' ')}} ...)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/factory_bot/attribute_defined_statically.rb
[90m               |  63              ATTRIBUTE_DEFINING_METHODS
[0m[90m               |  64  
[0m[37m   1.0ms     1 |  65            def_node_matcher :value_matcher, <<-PATTERN
[0m[90m               |  66              (send {self nil?} !#reserved_method? $...)
[0m[90m               |  67            PATTERN
[0m[90m               |  68  
[0m[37m   2.5ms     1 |  69            def_node_search :factory_attributes, <<-PATTERN
[0m[90m               |  70              (block (send nil? #attribute_defining_method? ...) _ { (begin $...) $(send ...) } )
[0m[90m               |  71            PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/factory_bot/create_list.rb
[90m               |  31            MSG_N_TIMES = 'Prefer %<number>s.times.'.freeze
[0m[90m               |  32  
[0m[37m   1.9ms     1 |  33            def_node_matcher :n_times_block_without_arg?, <<-PATTERN
[0m[90m               |  34              (block
[0m[90m               |  35                (send (int _) :times)
[0m[90m              .......[0m
[90m               |  39            PATTERN
[0m[90m               |  40  
[0m[37m   2.2ms     1 |  41            def_node_matcher :factory_call, <<-PATTERN
[0m[90m               |  42              (send ${(const nil? {:FactoryGirl :FactoryBot}) nil?} :create (sym $_) $...)
[0m[90m               |  43            PATTERN
[0m[90m               |  44  
[0m[37m   2.6ms     1 |  45            def_node_matcher :factory_list_call, <<-PATTERN
[0m[90m               |  46              (send ${(const nil? {:FactoryGirl :FactoryBot}) nil?} :create_list (sym $_) (int $_) $...)
[0m[90m               |  47            PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/rails/http_status.rb
[90m               |  34            include ConfigurableEnforcedStyle
[0m[90m               |  35  
[0m[37m   1.0ms     1 |  36            def_node_matcher :http_status, <<-PATTERN
[0m[90m               |  37              (send nil? :have_http_status ${int sym})
[0m[90m               |  38            PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/any_instance.rb
[90m               |  24          MSG = 'Avoid stubbing using `%<method>s`.'.freeze
[0m[90m               |  25  
[0m[37m   1.1ms     1 |  26          def_node_matcher :disallowed_stub, <<-PATTERN
[0m[90m               |  27            (send _ ${:any_instance :allow_any_instance_of :expect_any_instance_of} ...)
[0m[90m               |  28          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/around_block.rb
[90m               |  29                           'or `%<arg>s.run`.'.freeze
[0m[90m               |  30  
[0m[37m   2.4ms     1 |  31          def_node_matcher :hook, <<-PATTERN
[0m[90m               |  32            (block {(send nil? :around) (send nil? :around sym)} (args $...) ...)
[0m[90m               |  33          PATTERN
[0m[90m               |  34  
[0m[37m   2.3ms     1 |  35          def_node_search :find_arg_usage, <<-PATTERN
[0m[90m               |  36            {(send $... {:call :run}) (send _ _ $...) (yield $...) (block-pass $...)}
[0m[90m               |  37          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/be.rb
[90m               |  21          MSG = 'Don\'t use `be` without an argument.'.freeze
[0m[90m               |  22  
[0m[37m   1.5ms     1 |  23          def_node_matcher :be_without_args, <<-PATTERN
[0m[90m               |  24            (send _ {:to :not_to :to_not} $(send nil? :be))
[0m[90m               |  25          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/be_eql.rb
[90m               |  37          MSG = 'Prefer `be` over `eql`.'.freeze
[0m[90m               |  38  
[0m[37m   2.0ms     1 |  39          def_node_matcher :eql_type_with_identity, <<-PATTERN
[0m[90m               |  40            (send _ :to $(send nil? :eql {true false int float sym nil_type?}))
[0m[90m               |  41          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/before_after_all.rb
[90m               |  30                'in `%<hook>s` are not automatically rolled back.'.freeze
[0m[90m               |  31  
[0m[37m   1.5ms     1 |  32          def_node_matcher :before_or_after_all, <<-PATTERN
[0m[90m               |  33            $(send _ {:before :after} (sym {:all :context}))
[0m[90m               |  34          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/context_wording.rb
[90m               |  30          MSG = 'Start context description with %<prefixes>s.'.freeze
[0m[90m               |  31  
[0m[37m   1.8ms     1 |  32          def_node_matcher :context_wording, <<-PATTERN
[0m[90m               |  33            (block (send _ { :context :shared_context } $(str #bad_prefix?)) ...)
[0m[90m               |  34          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/describe_class.rb
[90m               |  23                'the class or module being tested.'.freeze
[0m[90m               |  24  
[0m[37m   2.8ms     1 |  25          def_node_matcher :valid_describe?, <<-PATTERN
[0m[90m               |  26            {
[0m[90m               |  27              (send {(const nil? :RSpec) nil?} :describe const ...)
[0m[90m              .......[0m
[90m               |  30          PATTERN
[0m[90m               |  31  
[0m[37m   2.1ms     1 |  32          def_node_matcher :describe_with_metadata, <<-PATTERN
[0m[90m               |  33            (send {(const nil? :RSpec) nil?} :describe
[0m[90m               |  34              !const
[0m[90m              .......[0m
[90m               |  37          PATTERN
[0m[90m               |  38  
[0m[37m   1.9ms     1 |  39          def_node_matcher :rails_metadata?, <<-PATTERN
[0m[90m               |  40            (pair
[0m[90m               |  41              (sym :type)
[0m[90m              .......[0m
[90m               |  43          PATTERN
[0m[90m               |  44  
[0m[37m   2.2ms     2 |  45          def_node_matcher :shared_group?, SharedGroups::ALL.block_pattern
[0m[90m               |  46  
[0m[90m               |  47          def on_top_level_describe(node, args)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/describe_symbol.rb
[90m               |  21          MSG = 'Avoid describing symbols.'.freeze
[0m[90m               |  22  
[0m[37m   1.8ms     1 |  23          def_node_matcher :describe_symbol?, <<-PATTERN
[0m[90m               |  24            (send {(const nil? :RSpec) nil?} :describe $sym ...)
[0m[90m               |  25          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/described_class.rb
[90m               |  40          MSG             = 'Use `%<replacement>s` instead of `%<src>s`.'.freeze
[0m[90m               |  41  
[0m[37m   2.0ms     1 |  42          def_node_matcher :common_instance_exec_closure?, <<-PATTERN
[0m[90m               |  43            (block (send (const nil? {:Class :Module}) :new ...) ...)
[0m[90m               |  44          PATTERN
[0m[90m               |  45  
[0m[37m   4.4ms     1 |  46          def_node_matcher :rspec_block?,
[0m[90m               |  47                           RuboCop::RSpec::Language::ALL.block_pattern
[0m[90m               |  48  
[0m[37m   0.4ms     1 |  49          def_node_matcher :scope_changing_syntax?, '{def class module}'
[0m[90m               |  50  
[0m[90m               |  51          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/empty_example_group.rb
[90m               |  61          MSG = 'Empty example group detected.'.freeze
[0m[90m               |  62  
[0m[37m   3.4ms     1 |  63          def_node_search :contains_example?, <<-PATTERN
[0m[90m               |  64            {
[0m[90m               |  65              #{(Examples::ALL + Includes::ALL).send_pattern}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/example_without_description.rb
[90m               |  55          MSG_ADD_DESCRIPTION  = 'Add a description.'.freeze
[0m[90m               |  56  
[0m[37m   1.2ms     1 |  57          def_node_matcher :example_description, '(send nil? _ $(str $_))'
[0m[90m               |  58  
[0m[90m               |  59          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/example_wording.rb
[90m               |  37          IT_PREFIX     = /\Ait /i.freeze
[0m[90m               |  38  
[0m[37m   2.0ms     1 |  39          def_node_matcher(
[0m[90m               |  40            :it_description,
[0m[90m               |  41            '(block (send _ :it $(str $_) ...) ...)'
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/expect_actual.rb
[90m               |  42          ].freeze
[0m[90m               |  43  
[0m[37m   0.9ms     1 |  44          def_node_matcher :expect_literal, '(send _ :expect $#literal?)'
[0m[90m               |  45  
[0m[90m               |  46          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/expect_change.rb
[90m               |  36          MSG_CALL = 'Prefer `change { %<obj>s.%<attr>s }`.'.freeze
[0m[90m               |  37  
[0m[37m   2.0ms     1 |  38          def_node_matcher :expect_change_with_arguments, <<-PATTERN
[0m[90m               |  39            (send nil? :change ({const send} nil? $_) (sym $_))
[0m[90m               |  40          PATTERN
[0m[90m               |  41  
[0m[37m   2.8ms     1 |  42          def_node_matcher :expect_change_with_block, <<-PATTERN
[0m[90m               |  43            (block
[0m[90m               |  44              (send nil? :change)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/expect_in_hook.rb
[90m               |  24          MSG = 'Do not use `%<expect>s` in `%<hook>s` hook'.freeze
[0m[90m               |  25  
[0m[37m   1.7ms     2 |  26          def_node_search :expectation, Expectations::ALL.send_pattern
[0m[90m               |  27  
[0m[90m               |  28          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/file_path.rb
[90m               |  47          MSG = 'Spec path should end with `%<suffix>s`.'.freeze
[0m[90m               |  48  
[0m[37m   1.5ms     1 |  49          def_node_search :const_described?,  '(send _ :describe (const ...) ...)'
[0m[37m   1.5ms     1 |  50          def_node_search :routing_metadata?, '(pair (sym :type) (sym :routing))'
[0m[90m               |  51  
[0m[90m               |  52          def on_top_level_describe(node, args)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/focus.rb
[90m               |  36          FOCUS_TRUE   = s(:pair, FOCUS_SYMBOL, s(:true))
[0m[90m               |  37  
[0m[33m   5.6ms     1 |  38          def_node_matcher :metadata, <<-PATTERN
[0m[90m               |  39            {(send {(const nil? :RSpec) nil?} #{FOCUSABLE_SELECTORS} ... (hash $...))
[0m[90m               |  40             (send {(const nil? :RSpec) nil?} #{FOCUSABLE_SELECTORS} $...)}
[0m[90m               |  41          PATTERN
[0m[90m               |  42  
[0m[37m   2.2ms     2 |  43          def_node_matcher :focused_block?, focused.send_pattern
[0m[90m               |  44  
[0m[90m               |  45          def on_send(node)
[0m
lib/rubocop/ast/sexp.rb
[90m               |  10        # Creates a {Node} with type `type` and children `children`.
[0m[90m               |  11        def s(type, *children)
[0m[37m   0.3ms    10 |  12          Node.new(type, children)
[0m[90m               |  13        end
[0m[90m               |  14      end
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/hook_argument.rb
[90m               |  68          HOOKS = Hooks::ALL.node_pattern_union.freeze
[0m[90m               |  69  
[0m[37m   2.4ms     1 |  70          def_node_matcher :scoped_hook, <<-PATTERN
[0m[90m               |  71            (block $(send _ #{HOOKS} (sym ${:each :example})) ...)
[0m[90m               |  72          PATTERN
[0m[90m               |  73  
[0m[37m   1.7ms     1 |  74          def_node_matcher :unscoped_hook, "(block $(send _ #{HOOKS}) ...)"
[0m[90m               |  75  
[0m[90m               |  76          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/hooks_before_examples.rb
[90m               |  30          MSG = 'Move `%<hook>s` above the examples in the group.'.freeze
[0m[90m               |  31  
[0m[33m   5.3ms     1 |  32          def_node_matcher :example_or_group?, <<-PATTERN
[0m[90m               |  33            {
[0m[90m               |  34              #{(Examples::ALL + ExampleGroups::ALL).block_pattern}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/implicit_expect.rb
[90m               |  30          MSG = 'Prefer `%<good>s` over `%<bad>s`.'.freeze
[0m[90m               |  31  
[0m[37m   2.7ms     1 |  32          def_node_matcher :implicit_expect, <<-PATTERN
[0m[90m               |  33            {
[0m[90m               |  34              (send nil? ${:should :should_not} ...)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/implicit_subject.rb
[90m               |  32          MSG = "Don't use implicit subject.".freeze
[0m[90m               |  33  
[0m[37m   1.1ms     1 |  34          def_node_matcher :implicit_subject?, <<-PATTERN
[0m[90m               |  35            (send nil? {:should :should_not :is_expected} ...)
[0m[90m               |  36          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/instance_spy.rb
[90m               |  23                'with `have_received`.'.freeze
[0m[90m               |  24  
[0m[37m   2.0ms     1 |  25          def_node_search :null_double, <<-PATTERN
[0m[90m               |  26            (lvasgn $_
[0m[90m               |  27              (send
[0m[90m              .......[0m
[90m               |  30          PATTERN
[0m[90m               |  31  
[0m[37m   2.9ms     1 |  32          def_node_search :have_received_usage, <<-PATTERN
[0m[90m               |  33            (send
[0m[90m               |  34              (send nil? :expect
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/instance_variable.rb
[90m               |  52          EXAMPLE_GROUP_METHODS = ExampleGroups::ALL + SharedGroups::ALL
[0m[90m               |  53  
[0m[37m   2.9ms     2 |  54          def_node_matcher :spec_group?, EXAMPLE_GROUP_METHODS.block_pattern
[0m[90m               |  55  
[0m[37m   1.9ms     1 |  56          def_node_matcher :dynamic_class?, <<-PATTERN
[0m[90m               |  57            (block (send (const nil? :Class) :new ...) ...)
[0m[90m               |  58          PATTERN
[0m[90m               |  59  
[0m[37m   0.6ms     1 |  60          def_node_search :ivar_usage, '$(ivar $_)'
[0m[90m               |  61  
[0m[37m   0.8ms     1 |  62          def_node_search :ivar_assigned?, '(ivasgn % ...)'
[0m[90m               |  63  
[0m[90m               |  64          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/invalid_predicate_matcher.rb
[90m               |  17          MSG = 'Omit `?` from `%<matcher>s`.'.freeze
[0m[90m               |  18  
[0m[37m   2.2ms     1 |  19          def_node_matcher :invalid_predicate_matcher?, <<-PATTERN
[0m[90m               |  20            (send (send nil? :expect ...) {:to :not_to :to_not} $(send nil? #predicate?))
[0m[90m               |  21          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/it_behaves_like.rb
[90m               |  25                'examples in a nested context.'.freeze
[0m[90m               |  26  
[0m[37m   0.8ms     1 |  27          def_node_matcher :example_inclusion_offense, '(send _ % ...)'
[0m[90m               |  28  
[0m[90m               |  29          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/iterated_expectation.rb
[90m               |  18                    'of iterating over an array.'.freeze
[0m[90m               |  19  
[0m[37m   2.4ms     1 |  20          def_node_matcher :each?, <<-PATTERN
[0m[90m               |  21            (block
[0m[90m               |  22              (send ... :each)
[0m[90m              .......[0m
[90m               |  26          PATTERN
[0m[90m               |  27  
[0m[37m   1.8ms     1 |  28          def_node_matcher :expectation?, <<-PATTERN
[0m[90m               |  29            (send (send nil? :expect (lvar %)) :to ...)
[0m[90m               |  30          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/let_before_examples.rb
[90m               |  37          MSG = 'Move `let` before the examples in the group.'.freeze
[0m[90m               |  38  
[0m[33m   5.4ms     1 |  39          def_node_matcher :example_or_group?, <<-PATTERN
[0m[90m               |  40            {
[0m[90m               |  41              #{(Examples::ALL + ExampleGroups::ALL).block_pattern}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/let_setup.rb
[90m               |  31          MSG = 'Do not use `let!` for test setup.'.freeze
[0m[90m               |  32  
[0m[37m   2.3ms     1 |  33          def_node_search :let_bang, <<-PATTERN
[0m[90m               |  34            (block $(send nil? :let! (sym $_)) args ...)
[0m[90m               |  35          PATTERN
[0m[90m               |  36  
[0m[37m   0.7ms     1 |  37          def_node_search :method_called?, '(send nil? %)'
[0m[90m               |  38  
[0m[90m               |  39          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/message_chain.rb
[90m               |  15          MSG = 'Avoid stubbing using `%<method>s`.'.freeze
[0m[90m               |  16  
[0m[37m   1.1ms     1 |  17          def_node_matcher :message_chain, <<-PATTERN
[0m[90m               |  18            (send _ {:receive_message_chain :stub_chain} ...)
[0m[90m               |  19          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/message_expectation.rb
[90m               |  32          SUPPORTED_STYLES = %w[allow expect].freeze
[0m[90m               |  33  
[0m[37m   1.8ms     1 |  34          def_node_matcher :message_expectation, <<-PATTERN
[0m[90m               |  35            (send $(send nil? {:expect :allow} ...) :to #receive_message?)
[0m[90m               |  36          PATTERN
[0m[90m               |  37  
[0m[37m   0.9ms     1 |  38          def_node_search :receive_message?, '(send nil? :receive ...)'
[0m[90m               |  39  
[0m[90m               |  40          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/message_spies.rb
[90m               |  37          SUPPORTED_STYLES = %w[have_received receive].freeze
[0m[90m               |  38  
[0m[37m   2.0ms     1 |  39          def_node_matcher :message_expectation, %(
[0m[90m               |  40            (send (send nil? :expect $_) {:to :to_not :not_to} ...)
[0m[90m               |  41          )
[0m[90m               |  42  
[0m[37m   1.1ms     1 |  43          def_node_search :receive_message, %(
[0m[90m               |  44            $(send nil? {:receive :have_received} ...)
[0m[90m               |  45          )
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/multiple_expectations.rb
[90m               |  51          MSG = 'Example has too many expectations [%<total>d/%<max>d].'.freeze
[0m[90m               |  52  
[0m[37m   0.6ms     1 |  53          def_node_search :with_aggregated_failures?, '(sym :aggregate_failures)'
[0m[37m   1.3ms     1 |  54          def_node_search :disabled_aggregated_failures?, <<-PATTERN
[0m[90m               |  55            (pair (sym :aggregate_failures) (false))
[0m[90m               |  56          PATTERN
[0m[90m               |  57  
[0m[37m   1.9ms     2 |  58          def_node_matcher :expect?, Expectations::ALL.send_pattern
[0m[37m   1.4ms     1 |  59          def_node_matcher :aggregate_failures?, <<-PATTERN
[0m[90m               |  60            (block (send _ :aggregate_failures ...) ...)
[0m[90m               |  61          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/named_subject.rb
[90m               |  46                'to reference it explicitly.'.freeze
[0m[90m               |  47  
[0m[33m   5.8ms     1 |  48          def_node_matcher :rspec_block?, <<-PATTERN
[0m[90m               |  49            {
[0m[90m               |  50              #{Examples::ALL.block_pattern}
[0m[90m              .......[0m
[90m               |  53          PATTERN
[0m[90m               |  54  
[0m[37m   2.4ms     1 |  55          def_node_matcher :shared_example?, <<-PATTERN
[0m[90m               |  56            #{SharedGroups::EXAMPLES.block_pattern}
[0m[90m               |  57          PATTERN
[0m[90m               |  58  
[0m[37m   0.8ms     1 |  59          def_node_search :subject_usage, '$(send nil? :subject)'
[0m[90m               |  60  
[0m[90m               |  61          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/nested_groups.rb
[90m               |  99            'deprecated in favor of `Max`. Please use that instead.'.freeze
[0m[90m               |  100  
[0m[37m   2.9ms     2 |  101          def_node_search :find_contexts, ExampleGroups::ALL.block_pattern
[0m[90m               |  102  
[0m[90m               |  103          def on_top_level_describe(node, _args)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/not_to_not.rb
[90m               |  19          MSG = 'Prefer `%<replacement>s` over `%<original>s`.'.freeze
[0m[90m               |  20  
[0m[37m   0.9ms     1 |  21          def_node_matcher :not_to_not_offense, '(send _ % ...)'
[0m[90m               |  22  
[0m[90m               |  23          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/overwriting_setup.rb
[90m               |  25          MSG = '`%<name>s` is already defined.'.freeze
[0m[90m               |  26  
[0m[33m  10.3ms     3 |  27          def_node_matcher :setup?, (Helpers::ALL + Subject::ALL).block_pattern
[0m[37m   1.3ms     1 |  28          def_node_matcher :first_argument_name, '(send _ _ ({str sym} $_))'
[0m[90m               |  29  
[0m[90m               |  30          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/pending.rb
[90m               |  37          PENDING_SYMBOL = s(:sym, :pending)
[0m[90m               |  38  
[0m[37m   4.5ms     1 |  39          def_node_matcher :metadata, <<-PATTERN
[0m[90m               |  40            {(send {(const nil? :RSpec) nil?} #{SKIPPABLE_SELECTORS} ... (hash $...))
[0m[90m               |  41             (send {(const nil? :RSpec) nil?} #{SKIPPABLE_SELECTORS} $...)}
[0m[90m               |  42          PATTERN
[0m[90m               |  43  
[0m[37m   2.1ms     2 |  44          def_node_matcher :pending_block?, PENDING_EXAMPLES.send_pattern
[0m[90m               |  45  
[0m[90m               |  46          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/predicate_matcher.rb
[90m               |  21          end
[0m[90m               |  22  
[0m[37m   3.8ms     1 |  23          def_node_matcher :predicate_in_actual?, <<-PATTERN
[0m[90m               |  24            (send
[0m[90m               |  25              (send nil? :expect {
[0m[90m              .......[0m
[90m               |  30          PATTERN
[0m[90m               |  31  
[0m[37m   1.2ms     1 |  32          def_node_matcher :be_bool?, <<-PATTERN
[0m[90m               |  33            (send nil? {:be :eq :eql :equal} {true false})
[0m[90m               |  34          PATTERN
[0m[90m               |  35  
[0m[37m   1.0ms     1 |  36          def_node_matcher :be_boolthy?, <<-PATTERN
[0m[90m               |  37            (send nil? {:be_truthy :be_falsey :be_falsy :a_truthy_value :a_falsey_value :a_falsy_value})
[0m[90m               |  38          PATTERN
[0m[90m              .......[0m
[90m               |  158          end
[0m[90m               |  159  
[0m[37m   4.0ms     1 |  160          def_node_matcher :predicate_matcher?, <<-PATTERN
[0m[90m               |  161            (send
[0m[90m               |  162              (send nil? :expect $!nil?)
[0m[90m              .......[0m
[90m               |  166          PATTERN
[0m[90m               |  167  
[0m[37m   2.9ms     1 |  168          def_node_matcher :predicate_matcher_block?, <<-PATTERN
[0m[90m               |  169            (block
[0m[90m               |  170              (send
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/receive_counts.rb
[90m               |  27          MSG = 'Use `%<alternative>s` instead of `%<original>s`.'.freeze
[0m[90m               |  28  
[0m[37m   2.0ms     1 |  29          def_node_matcher :receive_counts, <<-PATTERN
[0m[90m               |  30            (send $(send _ {:exactly :at_least :at_most} (int {1 2})) :times)
[0m[90m               |  31          PATTERN
[0m[90m               |  32  
[0m[37m   0.8ms     1 |  33          def_node_search :stub?, '(send nil? :receive ...)'
[0m[90m               |  34  
[0m[90m               |  35          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/receive_never.rb
[90m               |  17          MSG = 'Use `not_to receive` instead of `never`.'.freeze
[0m[90m               |  18  
[0m[37m   0.8ms     1 |  19          def_node_search :method_on_stub?, '(send nil? :receive ...)'
[0m[90m               |  20  
[0m[90m               |  21          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/return_from_stub.rb
[90m               |  40          MSG_BLOCK = 'Use block for static values.'.freeze
[0m[90m               |  41  
[0m[37m   1.0ms     1 |  42          def_node_search :contains_stub?, '(send nil? :receive (...))'
[0m[37m   1.4ms     1 |  43          def_node_search :and_return_value, <<-PATTERN
[0m[90m               |  44            $(send _ :and_return $(...))
[0m[90m               |  45          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/shared_context.rb
[90m               |  59  
[0m[90m               |  60          examples = (Examples::ALL + Includes::EXAMPLES)
[0m[37m   2.6ms     2 |  61          def_node_search :examples?, examples.send_pattern
[0m[90m               |  62  
[0m[90m               |  63          context = (Hooks::ALL + Helpers::ALL + Includes::CONTEXT + Subject::ALL)
[0m[37m   2.1ms     2 |  64          def_node_search :context?, context.send_pattern
[0m[90m               |  65  
[0m[37m   2.2ms     2 |  66          def_node_matcher :shared_context, SharedGroups::CONTEXT.block_pattern
[0m[37m   2.1ms     2 |  67          def_node_matcher :shared_example, SharedGroups::EXAMPLES.block_pattern
[0m[90m               |  68  
[0m[90m               |  69          def on_block(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/shared_examples.rb
[90m               |  22        #
[0m[90m               |  23        class SharedExamples < Cop
[0m[37m   2.2ms     1 |  24          def_node_matcher :shared_examples, <<-PATTERN
[0m[90m               |  25            (send
[0m[90m               |  26              {(const nil? :RSpec) nil?}
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/single_argument_message_chain.rb
[90m               |  19                '`%<called>s` with a single argument.'.freeze
[0m[90m               |  20  
[0m[37m   1.0ms     1 |  21          def_node_matcher :message_chain, <<-PATTERN
[0m[90m               |  22            (send _ {:receive_message_chain :stub_chain} $_)
[0m[90m               |  23          PATTERN
[0m[90m               |  24  
[0m[37m   0.5ms     1 |  25          def_node_matcher :single_key_hash?, '(hash pair)'
[0m[90m               |  26  
[0m[90m               |  27          def on_send(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/subject_stub.rb
[90m               |  39          #
[0m[90m               |  40          #   @yield [Symbol] subject name
[0m[37m   3.2ms     1 |  41          def_node_matcher :subject, <<-PATTERN
[0m[90m               |  42            {
[0m[90m               |  43              (block (send nil? :subject (sym $_)) args ...)
[0m[90m              .......[0m
[90m               |  60          #     expect(foo).to all(receive(:bar))
[0m[90m               |  61          #
[0m[37m   3.1ms     1 |  62          def_node_matcher :message_expectation?, <<-PATTERN
[0m[90m               |  63            {
[0m[90m               |  64              (send nil? :allow (send nil? %))
[0m[90m              .......[0m
[90m               |  67          PATTERN
[0m[90m               |  68  
[0m[37m   0.8ms     1 |  69          def_node_matcher :all_matcher?, '(send nil? :all ...)'
[0m[90m               |  70  
[0m[37m   0.8ms     1 |  71          def_node_search :receive_message?, '(send nil? :receive ...)'
[0m[90m               |  72  
[0m[90m               |  73          def expectation?(node)
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/unspecified_exception.rb
[90m               |  32          MSG = 'Specify the exception being captured'.freeze
[0m[90m               |  33  
[0m[37m   2.7ms     1 |  34          def_node_matcher :empty_raise_error_or_exception, <<-PATTERN.freeze
[0m[90m               |  35            (send
[0m[90m               |  36              (block
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/verified_doubles.rb
[90m               |  26          MSG = 'Prefer using verifying doubles over normal doubles.'.freeze
[0m[90m               |  27  
[0m[37m   1.1ms     1 |  28          def_node_matcher :unverified_double, <<-PATTERN
[0m[90m               |  29            {(send nil? {:double :spy} $...)}
[0m[90m               |  30          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/void_expect.rb
[90m               |  16                'Chain the methods or remove it.'.freeze
[0m[90m               |  17  
[0m[37m   0.8ms     1 |  18          def_node_matcher :expect?, <<-PATTERN
[0m[90m               |  19            (send nil? :expect ...)
[0m[90m               |  20          PATTERN
[0m[90m               |  21  
[0m[37m   1.0ms     1 |  22          def_node_matcher :expect_block?, <<-PATTERN
[0m[90m               |  23            (block #expect? (args) _body)
[0m[90m               |  24          PATTERN
[0m
vendor/bundle/ruby/2.6.0/gems/rubocop-rspec-1.32.0/lib/rubocop/cop/rspec/yield.rb
[90m               |  17          MSG = 'Use `.and_yield`.'.freeze
[0m[90m               |  18  
[0m[37m   0.9ms     1 |  19          def_node_search :method_on_stub?, '(send nil? :receive ...)'
[0m[90m               |  20  
[0m[37m   1.0ms     1 |  21          def_node_matcher :block_arg, '(args (blockarg $_))'
[0m[90m               |  22  
[0m[37m   1.2ms     1 |  23          def_node_matcher :block_call?, '(send (lvar %) :call ...)'
[0m[90m               |  24  
[0m[90m               |  25          def on_block(node)
[0m
lib/rubocop/formatter/formatter_set.rb
[90m               |  45  
[0m[90m               |  46        def file_finished(file, offenses)
[0m[33m  28.7ms     2 |  47          each { |f| f.file_finished(file, offenses) }
[0m[90m               |  48          offenses
[0m[90m               |  49        end
[0m
lib/rubocop/result_cache.rb
[90m               |  23        return unless File.exist?(cache_root)
[0m[90m               |  24  
[0m[31m 852.7ms 15435 |  25        files, dirs = Find.find(cache_root).partition { |path| File.file?(path) }
[0m[90m               |  26        return unless requires_file_removal?(files.length, config_store)
[0m[90m               |  27  
[0m[90m              .......[0m
[90m               |  82        @allow_symlinks_in_cache_location =
[0m[90m               |  83          ResultCache.allow_symlinks_in_cache_location?(config_store)
[0m[31m  78.6ms     2 |  84        @path = File.join(cache_root, rubocop_checksum,
[0m[90m               |  85                          relevant_options_digest(options),
[0m[33m  21.6ms     1 |  86                          file_checksum(file, config_store))
[0m[90m               |  87        @cached_data = CachedData.new(file)
[0m[90m               |  88      end
[0m[90m              .......[0m
[90m               |  93  
[0m[90m               |  94      def load
[0m[33m   9.0ms     2 |  95        @cached_data.from_json(IO.read(@path, encoding: Encoding::UTF_8))
[0m[90m               |  96      end
[0m[90m               |  97  
[0m[90m              .......[0m
[90m               |  145        mode = File.stat(file).mode
[0m[90m               |  146        digester.update(
[0m[33m  21.4ms     3 |  147          "#{file}#{mode}#{config_store.for(file).signature}"
[0m[90m               |  148        )
[0m[90m               |  149        digester.file(file)
[0m[90m              .......[0m
[90m               |  169            # exe directory. A change to any of them could affect the cop output
[0m[90m               |  170            # so we include them in the cache hash.
[0m[37m   0.2ms     4 |  171            source_files = $LOADED_FEATURES + Find.find(exe_root).to_a
[0m[90m               |  172            sources = source_files
[0m[33m  10.2ms  1174 |  173                      .select { |path| File.file?(path) }
[0m[37m   0.5ms     1 |  174                      .sort
[0m[33m  33.0ms  1169 |  175                      .map { |path| IO.read(path, encoding: Encoding::UTF_8) }
[0m[33m  12.9ms     9 |  176            Digest::SHA1.hexdigest(sources.join)
[0m[90m               |  177          end
[0m[90m               |  178      end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/find.rb
[90m               |  41      fs_encoding = Encoding.find("filesystem")
[0m[90m               |  42  
[0m[31m 733.3ms    12 |  43      paths.collect!{|d| raise Errno::ENOENT, d unless File.exist?(d); d.dup}.each do |path|
[0m[90m               |  44        path = path.to_path if path.respond_to? :to_path
[0m[90m               |  45        enc = path.encoding == Encoding::US_ASCII ? fs_encoding : path.encoding
[0m[90m               |  46        ps = [path]
[0m[33m  18.4ms 15435 |  47        while file = ps.shift
[0m[31m 677.3ms 15433 |  48          catch(:prune) do
[0m[31m 124.2ms 61732 |  49            yield file.dup.taint
[0m[90m               |  50            begin
[0m[31m 108.6ms 15433 |  51              s = File.lstat(file)
[0m[90m               |  52            rescue Errno::ENOENT, Errno::EACCES, Errno::ENOTDIR, Errno::ELOOP, Errno::ENAMETOOLONG
[0m[90m               |  53              raise unless ignore_error
[0m[90m               |  54              next
[0m[90m               |  55            end
[0m[33m  18.6ms 15433 |  56            if s.directory? then
[0m[90m               |  57              begin
[0m[33m  30.3ms   252 |  58                fs = Dir.children(file, encoding: enc)
[0m[90m               |  59              rescue Errno::ENOENT, Errno::EACCES, Errno::ENOTDIR, Errno::ELOOP, Errno::ENAMETOOLONG
[0m[90m               |  60                raise unless ignore_error
[0m[90m               |  61                next
[0m[90m               |  62              end
[0m[37m   3.8ms   126 |  63              fs.sort!
[0m[31m 142.2ms   126 |  64              fs.reverse_each {|f|
[0m[33m  40.0ms 15431 |  65                f = File.join(file, f)
[0m[33m  36.6ms 30862 |  66                ps.unshift f.untaint
[0m[90m               |  67              }
[0m[90m               |  68            end
[0m
lib/rubocop/cached_data.rb
[90m               |  11  
[0m[90m               |  12      def from_json(text)
[0m[33m   8.9ms     2 |  13        deserialize_offenses(JSON.parse(text))
[0m[90m               |  14      end
[0m[90m               |  15  
[0m[90m              .......[0m
[90m               |  46        source_buffer = Parser::Source::Buffer.new(@filename)
[0m[90m               |  47        source_buffer.source = File.read(@filename, encoding: Encoding::UTF_8)
[0m[33m   8.0ms     1 |  48        offenses.map! do |o|
[0m[37m   1.6ms   352 |  49          location = Parser::Source::Range.new(source_buffer,
[0m[90m               |  50                                               o['location']['begin_pos'],
[0m[90m               |  51                                               o['location']['end_pos'])
[0m[33m   5.4ms   352 |  52          Cop::Offense.new(o['severity'], location,
[0m[90m               |  53                           o['message'],
[0m[37m   0.2ms   176 |  54                           o['cop_name'], o['status'].to_sym)
[0m[90m               |  55        end
[0m[90m               |  56      end
[0m
/Users/hoshino/.rbenv/versions/2.6.3/lib/ruby/2.6.0/json/common.rb
[90m               |  154    # * *array_class*: Defaults to Array
[0m[90m               |  155    def parse(source, opts = {})
[0m[37m   0.7ms    12 |  156      Parser.new(source, opts).parse
[0m[90m               |  157    end
[0m[90m               |  158  
[0m
vendor/bundle/ruby/2.6.0/gems/parser-2.6.3.0/lib/parser/source/buffer.rb
[90m               |  220        def line_for_position(position)
[0m[90m               |  221          @line_for_position[position] ||= begin
[0m[33m   6.9ms   170 |  222            line_no, _ = line_for(position)
[0m[90m               |  223            @first_line + line_no
[0m[90m               |  224          end
[0m[90m              .......[0m
[90m               |  234        def column_for_position(position)
[0m[90m               |  235          @column_for_position[position] ||= begin
[0m[37m   1.2ms   170 |  236            _, line_begin = line_for(position)
[0m[90m               |  237            position - line_begin
[0m[90m               |  238          end
[0m[90m              .......[0m
[90m               |  311            @line_begins, index = [ [ 0, 0 ] ], 0
[0m[90m               |  312  
[0m[37m   1.5ms  1108 |  313            while index = @source.index("\n".freeze, index)
[0m[90m               |  314              index += 1
[0m[37m   1.4ms  1107 |  315              @line_begins.unshift [ @line_begins.length, index ]
[0m[90m               |  316            end
[0m[90m               |  317          end
[0m[90m              .......[0m
[90m               |  321  
[0m[90m               |  322        def line_for(position)
[0m[33m   6.7ms   680 |  323          line_begins.bsearch do |line, line_begin|
[0m[90m               |  324            line_begin <= position
[0m[90m               |  325          end
[0m
vendor/bundle/ruby/2.6.0/gems/parser-2.6.3.0/lib/parser/source/range.rb
[90m               |  46          @begin_pos, @end_pos = begin_pos, end_pos
[0m[90m               |  47  
[0m[37m   0.2ms   176 |  48          freeze
[0m[90m               |  49        end
[0m[90m               |  50  
[0m[90m              .......[0m
[90m               |  82        #
[0m[90m               |  83        def line
[0m[33m   7.4ms   176 |  84          @source_buffer.line_for_position(@begin_pos)
[0m[90m               |  85        end
[0m[90m               |  86  
[0m[90m              .......[0m
[90m               |  91        #
[0m[90m               |  92        def column
[0m[37m   1.7ms   176 |  93          @source_buffer.column_for_position(@begin_pos)
[0m[90m               |  94        end
[0m[90m               |  95  
[0m
lib/rubocop/cop/offense.rb
[90m               |  58        def initialize(severity, location, message, cop_name,
[0m[90m               |  59                       status = :uncorrected)
[0m[37m   3.0ms   352 |  60          @severity = RuboCop::Cop::Severity.new(severity)
[0m[90m               |  61          @location = location
[0m[37m   0.2ms   176 |  62          @message = message.freeze
[0m[37m   0.2ms   176 |  63          @cop_name = cop_name.freeze
[0m[90m               |  64          @status = status
[0m[37m   0.2ms   176 |  65          freeze
[0m[90m               |  66        end
[0m[90m               |  67  
[0m[90m              .......[0m
[90m               |  107        # @api private
[0m[90m               |  108        def line
[0m[33m   7.9ms   176 |  109          location.line
[0m[90m               |  110        end
[0m[90m               |  111  
[0m[90m               |  112        # @api private
[0m[90m               |  113        def column
[0m[37m   2.2ms   176 |  114          location.column
[0m[90m               |  115        end
[0m[90m               |  116  
[0m[90m              .......[0m
[90m               |  155        # reason is that editors, such as Emacs, expect this.
[0m[90m               |  156        def real_column
[0m[37m   2.7ms   176 |  157          column + 1
[0m[90m               |  158        end
[0m[90m               |  159  
[0m
lib/rubocop/cop/severity.rb
[90m               |  25        # @api private
[0m[90m               |  26        def self.name_from_code(code)
[0m[37m   0.2ms   177 |  27          name = code.to_sym
[0m[90m               |  28          CODE_TABLE[name] || name
[0m[90m               |  29        end
[0m[90m              .......[0m
[90m               |  31        # @api private
[0m[90m               |  32        def initialize(name_or_code)
[0m[37m   0.7ms   177 |  33          name = Severity.name_from_code(name_or_code)
[0m[37m   0.2ms   177 |  34          unless NAMES.include?(name)
[0m[90m               |  35            raise ArgumentError, "Unknown severity: #{name}"
[0m[90m               |  36          end
[0m[90m               |  37  
[0m[37m   0.2ms   177 |  38          @name = name.freeze
[0m[37m   0.2ms   177 |  39          freeze
[0m[90m               |  40        end
[0m[90m               |  41  
[0m[90m              .......[0m
[90m               |  47        # @api private
[0m[90m               |  48        def code
[0m[37m   0.7ms   528 |  49          @name.to_s[0].upcase
[0m[90m               |  50        end
[0m[90m               |  51  
[0m
lib/rubocop/formatter/simple_text_formatter.rb
[90m               |  29          return if offenses.empty?
[0m[90m               |  30  
[0m[37m   0.5ms     1 |  31          count_stats(offenses)
[0m[33m  28.2ms     1 |  32          report_file(file, offenses)
[0m[90m               |  33        end
[0m[90m               |  34  
[0m[90m              .......[0m
[90m               |  42          output.puts yellow("== #{smart_path(file)} ==")
[0m[90m               |  43  
[0m[33m  28.1ms     1 |  44          offenses.each do |o|
[0m[37m   1.1ms   352 |  45            output.printf("%s:%3d:%3d: %s\n",
[0m[33m   5.6ms   176 |  46                          colored_severity_code(o),
[0m[33m  20.2ms   528 |  47                          o.line, o.real_column, message(o))
[0m[90m               |  48          end
[0m[90m               |  49        end
[0m[90m              .......[0m
[90m               |  63        def count_stats(offenses)
[0m[90m               |  64          @total_offense_count += offenses.count
[0m[37m   0.5ms   177 |  65          @total_correction_count += offenses.count(&:corrected?)
[0m[90m               |  66        end
[0m[90m               |  67  
[0m[90m               |  68        def colored_severity_code(offense)
[0m[90m               |  69          color = COLOR_FOR_SEVERITY[offense.severity.name]
[0m[37m   4.8ms   352 |  70          colorize(offense.severity.code, color)
[0m[90m               |  71        end
[0m[90m               |  72  
[0m[90m               |  73        def annotate_message(msg)
[0m[37m   3.2ms   352 |  74          msg.gsub(/`(.*?)`/m, yellow('\1'))
[0m[90m               |  75        end
[0m[90m               |  76  
[0m[90m               |  77        def message(offense)
[0m[37m   0.2ms   176 |  78          message = offense.corrected? ? green('[Corrected] ') : ''
[0m[33m   7.5ms   176 |  79          "#{message}#{annotate_message(offense.message)}"
[0m[90m               |  80        end
[0m[90m               |  81  
[0m
lib/rubocop/formatter/colorizable.rb
[90m               |  20  
[0m[90m               |  21        def colorize(string, *args)
[0m[37m   4.4ms  1061 |  22          rainbow.wrap(string).color(*args)
[0m[90m               |  23        end
[0m[90m               |  24  
[0m[90m              .......[0m
[90m               |  33          white
[0m[90m               |  34        ].each do |color|
[0m[37m   3.6ms   177 |  35          define_method(color) do |string|
[0m[37m   3.1ms   177 |  36            colorize(string, color)
[0m[90m               |  37          end
[0m[90m               |  38        end
[0m
vendor/bundle/ruby/2.6.0/gems/rainbow-3.0.0/lib/rainbow/wrapper.rb
[90m               |  14          Presenter.new(string.to_s)
[0m[90m               |  15        else
[0m[37m   2.0ms  1062 |  16          NullPresenter.new(string.to_s)
[0m[90m               |  17        end
[0m[90m               |  18      end
[0m
vendor/bundle/ruby/2.6.0/gems/rainbow-3.0.0/lib/rainbow/null_presenter.rb
[90m               |  82  
[0m[90m               |  83      def respond_to_missing?(method_name, *args)
[0m[37m   1.4ms   528 |  84        Color::X11Named.color_names.include?(method_name) && args.empty? || super
[0m[90m               |  85      end
[0m[90m               |  86  
[0m
vendor/bundle/ruby/2.6.0/gems/rainbow-3.0.0/lib/rainbow/color.rb
[90m               |  124  
[0m[90m               |  125        def self.color_names
[0m[37m   0.3ms   176 |  126          NAMES.keys
[0m[90m               |  127        end
[0m[90m               |  128  
[0m
